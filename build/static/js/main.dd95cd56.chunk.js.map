{"version":3,"sources":["images/dot.svg","images/dot-full.svg","images/img3.svg","images/img1.svg","images/img2.svg","components/Home/sections/admin/Profile.js","components/Unique.js","components/Home/sections/admin/Doctor.js","components/Home/sections/admin/LiveUpdates.js","components/Home/sections/admin/Patient.js","components/Home/sections/admin/Department.js","components/Home/sections/admin/Dashboard.js","components/Home/sections/admin/Admin.js","images/img4.svg","components/Home/sections/admin/Working.js","components/Home/sections/admin/NavSection.js","images/email.jpg","components/Home/HospitalAdminHomePage.js","components/Home/sections/patient/Timeline.js","components/Home/sections/patient/NavSection.js","components/Home/PatientHomePage.js","components/Home/sections/doctor/DoctorsList.js","components/Home/sections/doctor/AddInfo.js","components/Home/sections/doctor/AddPrescriptionDetails.js","components/Home/sections/doctor/Patient.js","components/Home/sections/doctor/Doctor.js","images/verify.jpg","components/Home/sections/doctor/NavSection.js","components/Home/DoctorHomePage.js","components/Home/DefualtHomePage.js","images/logo.svg","components/HomePage.js","App.js","components/forms/HospitalLoginForm.js","components/forms/DoctorLoginForm.js","components/forms/PatientLoginForm.js","videos/vid4.mp4","components/forms/Form.js","images/girl_laptop.svg","videos/vid1.mp4","components/Login.js","reportWebVitals.js","components/Home/sections/doctor/VerifyEmail.js","index.js","components/Storage.js"],"names":["TransitionUp","props","Slide","direction","Profile","useState","branch","address","hospital_id","hospital_name","pincode","logo","mobile_no","user_id","email","update","setUpdate","React","show","setShow","editField","setEditField","editCurrentValue","setEditCurrentValue","operation","setOperation","isImgClicked","setIsImgClicked","src","alt","setImg","useEffect","getAdminDetails","Transition","a","fetch","headers","credentials","response","json","content","imgLogo","console","log","setTimeout","updateAdminProfile","e","preventDefault","formField","FormData","append","method","body","document","querySelector","click","handleClose","selectedValue","target","value","op","setEditValue","open","setOpen","undefined","transition","setTransition","className","Form","style","padding","encType","onSubmit","variant","onClick","fontSize","position","right","Modal","size","aria-labelledby","centered","onHide","Header","closeButton","Title","id","Group","controlId","Label","onSelect","onInput","onChange","aria-label","name","Body","Row","Col","xs","Control","disabled","height","placeholder","type","Feedback","textAlign","paddingTop","Footer","Button","accept","files","URL","createObjectURL","display","aria-hidden","LoadingButton","Snackbar","onClose","TransitionComponent","message","isLoading","setLoading","Promise","resolve","then","Spinner","as","animation","role","makeStyles","theme","container","flexWrap","formControl","margin","spacing","minWidth","uniqId","uniq","Math","floor","random","toString","substring","doctoruniqId","doctorPassword","paswd","patientID","Doctor","dept","doctor_id","hospitalid","joined_date","password_before_verification","app_id","doctor","setDoctor","modalShowRemove","setModalShowRemove","modalShowAdd","setModalShowAdd","tableData","setTableData","errText","setErrText","setDoctorData","muiData","setMuiData","getDepartments","getDoctorData","doctorArr","slice","reverse","map","data","push","email_Verified","collectData","event","removeAttribute","setAttribute","ex","createDoctorsAccount","JSON","stringify","Object","keys","length","response_status","status","classList","add","remove","Container","md","InputGroup","hasValidation","Prepend","htmlFor","cursor","Text","list","department","isInvalid","width","flexGrow","title","columns","label","options","filter","sort","filterType","Link","Scroll","Element","DirectLink","Events","animateScroll","scrollSpy","LiveUpdates","patientData","count","setCount","marginTop","fontFamily","paddingBottom","activeClass","to","smooth","duration","containerId","overflow","marginBottom","onLoad","animationDelay","patient_name","dateFormat","created_at","validator","require","Patient","inputFocusRef","useRef","setPatientData","account_created_hospital_id","password","aadhar_number","date_of_birth","patientAccount","setPatientAccount","valid","setValid","isAadharErr","setIsAadharErr","aadharMsg","setAadharMsg","isMobileErr","setIsMobileErr","mobileMsg","setMobileMsg","isEmailErr","setIsEmailErr","emailMsg","setEmailMsg","isValidNumber","createPatientAccount","getPatientList","lineHeight","onKeyUp","ref","required","rows","varint","popover","Popover","Content","OverlayTrigger","trigger","placement","overlay","Alert","elevation","useStyles","root","table","Department","classes","setDepartment","deptErr","setDeptErr","reason","saveDept","res","con","axios","url","maxWidth","inline","TableContainer","component","Paper","Table","TableHead","TableRow","TableBody","TableCell","scope","autoHideDuration","severity","Dashboard","totalDoctors","setTotalDoctors","verifiedDoctors","setVerifiedDoctors","notVerifiedDoctors","setNotVerifiedDoctors","totalIDCreated","setTotalIDCreated","total_doctors","verified_doctors","not_verified_doctors","total_patient_id_created","counters","querySelectorAll","forEach","counter","updateCount","getAttribute","innerText","inc","ceil","class","data-target","DefaultContent","verifyStatus","setVerifyStatus","URLSearchParams","window","location","search","get","ProfileContent","DoctorContent","PatientContent","DepartmentContent","Working","transform","img","fontStyle","color","NavSection","setIsSuccess","buttonLabel","adminLogoPath","setAdminLogoPath","detail","logout","localStorage","removeItem","href","toggle","userSelect","datatarget","activeClassName","loading","userid","path","button","VerifyEmail","btnStatus","setBtnStatus","headStatus","setHeadStatus","paraContent","setParaContent","sendVerifyMail","is_email_Verified","mailVerify","Card","boxShadow","CardActionArea","CardMedia","image","emailImg","CardContent","Typography","gutterBottom","CardActions","HospitalAdminHomePage","history","useHistory","userID","setUserID","hospitalID","setHospitalID","setLogo","setEmail","setIsEmailVerified","setIsLoading","getItem","adminLogo","Timeline","timeline","setTimeline","animateFromTo","elem","offset","x","y","contains","gsap","fromTo","autoAlpha","ease","overwrite","hide","set","registerPlugin","ScrollTrigger","utils","toArray","create","onEnter","onEnterBack","onLeave","getHistoryInfo","idx","cause","description","revisit_date","entered_date","clear","grow","menuButton","marginRight","breakpoints","up","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transitions","sectionDesktop","sectionMobile","useStyles2","bottom","ScrollTop","children","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","scrollIntoView","behavior","block","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","aria-controls","aria-haspopup","CssBaseline","AppBar","background","Toolbar","noWrap","edge","textTransform","Box","my","Fab","PatientHomePage","setName","userlogo","DoctorsList","doctorsList","setDoctorsList","redirectURL","fb_url","tweet_url","insta_url","DoctorHospitalDetails","hospitalDetails","setHospitalDetails","AddInfo","SlideTransition","AddPrescriptionDetails","state","aadharnumber","appid","symptoms","editorState","EditorState","createEmpty","Fade","onEditorStateChange","setState","convertToRaw","getCurrentContent","savePrescriptionDetails","getHistory","handleClick","bind","this","Component","linkStyle","media","expand","shortest","expandOpen","avatar","red","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","text","secondary","classes1","expanded","setExpanded","setPatientID","currentPatientInfo","setCurrentPatientInfo","historyInfo","setHistoryInfo","isModalOpen","setIsModalOpen","option","firstLetter","toUpperCase","test","getPatientsData","Autocomplete","b","localeCompare","groupBy","getOptionLabel","getOptionSelected","newValue","renderInput","params","TextField","email_verified","mobile_verified","scrollTo","top","documentElement","scrollHeight","border","float","Accordion","panel","isExpanded","AccordionSummary","expandIcon","AccordionDetails","exact","DoctorHomePage","DefaultHomePage","author","setAuthor","quote","setQuote","randomValue","setInterval","changeImg","landingImg","imgBtn1","imgBtn2","imgBtn3","default","viewBox","fill","xmlns","d","stroke","stroke-width","version","enable-background","stroke-miterlimit","points","img2","img5","img3","HomePage","homePageStatus","App","site","useContext","ActiveSite","HospitalLoginForm","setPassword","isSuccess","isVisible","setIsVisible","err","setErr","isPasswordErr","setIsPasswordErr","isMailErr","setIsMailErr","login","setItem","interface","aria-describedby","DoctorLoginForm","loginResponse","PatientLoginForm","aadhar","setAadhar","isOtpSent","setIsOtpSent","msg","setMsg","sendOTP","EnterOTP","otp","setOTP","clickEvent","getElementById","focus","verifyOtp","result","maxLength","Forms","formType","HospitalRegisterForm","registerArr","setRegisterArr","repassword","setRepassword","isRedirect","setIsRedirect","checkedB","registerHospital","autoplay","loop","muted","vid","hospitalName","hospitalId","data-error","data-success","withStyles","switchBase","opacity","thumb","track","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","TabPanel","index","Login","setValue","Tabs","TabIndicatorProps","Tab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryParams","token","createContext","Router","Provider","Fragment","verifyDoctorEmail","ReactDOM","render"],"mappings":"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","file":"static/js/main.dd95cd56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dot.38ad7f8d.svg\";","export default __webpack_public_path__ + \"static/media/dot-full.7e79c38d.svg\";","export default __webpack_public_path__ + \"static/media/img3.23b7edda.svg\";","export default __webpack_public_path__ + \"static/media/img1.ad3f2280.svg\";","export default __webpack_public_path__ + \"static/media/img2.4097dc4b.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { Form, Spinner, Col, Row, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default function Profile() {\r\n    \r\n    const [ update,setUpdate ]=useState({\r\n        branch:'',address:'',hospital_id:'',hospital_name:'',\r\n        pincode:'',logo:'',mobile_no:0,user_id:'',email:''\r\n    })\r\n    \r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [show, setShow] = useState(false)\r\n    const [editField,setEditField]=useState(\"\")\r\n    const [editCurrentValue,setEditCurrentValue]=useState(\"\")\r\n    const [operation,setOperation]=useState(\"\")\r\n    const [isImgClicked,setIsImgClicked]=useState(false)\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const [{alt, src}, setImg] = useState({\r\n        src: \"https://www.shareicon.net/data/2016/07/26/801997_user_512x512.png\",\r\n        alt: 'Logo',\r\n    });\r\n\r\n    const handleImg = (e) => {\r\n        if(e.target.files[0]) {\r\n            setImg({\r\n                src: URL.createObjectURL(e.target.files[0]),\r\n                alt: e.target.files[0].name,\r\n            });   \r\n            setIsImgClicked(true) \r\n        }  \r\n        setUpdate({\r\n            branch:update.branch,email:update.email,\r\n            hospital_id:update.hospital_id,hospital_name:update.hospital_name,\r\n            user_id:update.user_id,mobile_no:update.mobile_no,\r\n            address:update.address,pincode:update.pincode,logo:e.target.files[0]\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAdminDetails();\r\n    },[])\r\n\r\n    let getAdminDetails =async()=>{\r\n\r\n        let response=await fetch('/api/hospital-admin/',{\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n\r\n        setUpdate({\r\n            branch:content.branch,email:content.email,\r\n            hospital_id:content.hospital_id,hospital_name:content.hospital_name,\r\n            user_id:content.user_id,mobile_no:content.mobile_no,\r\n            address:content.address,pincode:content.pincode,logo:content.logo\r\n        })\r\n        if(content.logo){\r\n            let imgLogo=content.logo\r\n            console.log(imgLogo)\r\n            // let imgLogoModified=imgLogo.replaceAll(\"/media/media\", \"/media\")// imgLogo.replace(\"/media\", \"\")\r\n            // imgSRC = require(\"./../../../../backend\"+imgLogoModified).default\r\n            setTimeout(()=>{\r\n                // let imgLogoModified=imgLogo.replace(\"/media/media\", \"/media\")// imgLogo.replace(\"/media\", \"\")\r\n                // console.log(imgLogoModified)\r\n                setImg({\r\n                    src: \"\"+imgLogo,\r\n                    alt: content.hospital_name\r\n                })\r\n                // console.log(src)\r\n\r\n            },500)\r\n        }\r\n    }\r\n\r\n    let updateAdminProfile=async (e)=>{\r\n        e.preventDefault();\r\n        let formField=new FormData()\r\n        formField.append('branch',update.branch)\r\n        formField.append('email',update.email)\r\n        formField.append('hospital_id',update.hospital_id)\r\n        formField.append('hospital_name',update.hospital_name)\r\n        formField.append('mobile_no',update.mobile_no)\r\n        formField.append('address',update.address)\r\n        formField.append('pincode',update.pincode)\r\n\r\n        if(isImgClicked){\r\n            formField.append('logo',update.logo)\r\n            setIsImgClicked(false) \r\n        }\r\n\r\n        let response=await fetch(\"/api/hospital-update/\",{\r\n            method:\"PUT\",\r\n            credentials:'include',\r\n            body:formField\r\n        })\r\n        let content=await response.json()\r\n        document.querySelector('.update-snack-btn').click()\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () =>  setShow(true);\r\n\r\n    let selectedValue=(e)=>{\r\n        setEditCurrentValue(\"\")\r\n        setEditField(e.target.value)\r\n        let op = editField===\"branch\" ? update.branch : editField===\"hospital_name\" ? update.hospital_name : editField===\"hospital_id\" ? update.hospital_id : editField===\"address\" ? update.address : editField===\"pincode\" ? update.pincode : ''\r\n        setOperation(op)\r\n    }\r\n\r\n    let setEditValue=(e)=>{\r\n        setUpdate({...update,[editField]:e.target.value})\r\n        setEditCurrentValue(e.target.value)\r\n    }\r\n\r\n    // const handleClickVariant = (variant) => () => {\r\n    //     enqueueSnackbar('This is a success message!', { variant });\r\n    // };\r\n    const [open, setOpen] = React.useState(false);\r\n    const [transition, setTransition] = React.useState(undefined);\r\n\r\n    const handleClick = (Transition) => () => {\r\n        setTransition(() => Transition);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCloseUpdate = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-profile-content\">\r\n            <Form method=\"POST\" style={{padding:\"20px\"}} encType=\"multipart/form-data\" onSubmit={updateAdminProfile}>\r\n                <div className=\"profile-card\">\r\n                        <i variant=\"primary\" onClick={handleShow} style={{fontSize:\"25px\",position: \"absolute\",right:\"0\"}} className='fa fa-edit m-2'></i>\r\n                        <Modal size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Update\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                                <Form.Group controlId=\"exampleForm.SelectCustom\"  className=\"p-4\">\r\n                                    <Form.Label>Edit</Form.Label>\r\n                                    <select onSelect={selectedValue} onInput={selectedValue} onChange={selectedValue} className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\">\r\n                                        <option value=\"\">Click Here to Select</option>\r\n                                        <option name=\"branch\" value=\"branch\">Branch</option>\r\n                                        <option name=\"hospital_name\" value=\"hospital_name\">Hospital Name</option>\r\n                                        <option name=\"hospital_id\" value=\"hospital_id\">Registeration Number</option>\r\n                                        <option name=\"address\" value=\"address\">Address</option>\r\n                                        <option name=\"pincode\" value=\"pincode\">pincode</option>\r\n                                    </select>\r\n                                </Form.Group>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col xs={5}>\r\n                                       <Form.Group>\r\n                                            <Form.Label>Current Value</Form.Label>\r\n                                            <Form.Control disabled style={{height:\"45px\"}} value={operation} placeholder=\"Previous Value\" name=\"profile-edit-info\" id=\"profile-edit-info\" type=\"text\" className=\"profile-edit-info\" />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                Please Enter a valid email.\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>   \r\n                                    </Col>\r\n                                    <Col style={{textAlign:\"center\"}}>\r\n                                        <br />\r\n                                        <i style={{paddingTop:\"10px\"}} className='fas fa-arrow-right glow-exchange'></i>\r\n                                        <p style={{fontSize:\"16px\"}}>convert to</p>\r\n                                    </Col>\r\n                                    <Col xs={5}>\r\n                                        <Form.Group>\r\n                                            <Form.Label>New Value</Form.Label>\r\n                                            <Form.Control style={{height:\"45px\"}} value={editCurrentValue} onInput={setEditValue} onChange={setEditValue} placeholder=\"Enter new value\" name=\"convert-valur\" id=\"convert-valur\" type=\"text\" className=\"convert-valur\" />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                Please Enter a valid email.\r\n                                            </Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>Modify</Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    <div className=\"profile-img\">\r\n                        <input type=\"file\" accept=\".png, .jpg, .jpeg\" name=\"logo\" id=\"photo\" className=\"profile-img-change visually-hidden\" onChange={handleImg} />\r\n                        <img src={src} alt={alt} style={{display:\"inline-block\"}} onClick={(e)=>{\r\n                                document.querySelector('.profile-img-change').click()\r\n                            }} className=\"logo-img-admin\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"profile-cnt js-profile-cnt\">\r\n                        <div className=\"profile-name\">{update.hospital_name}</div>\r\n                        <div className=\"profile-txt\">{update.branch} {update.pincode===\"null\" ? '' : <strong>, {update.pincode}</strong>}</div>\r\n                        {update.address===\"null\" ? '' :\r\n                        <div className=\"profile-card-loc\">\r\n                            <span className=\"profile-card-loc__icon\">\r\n                                <i className=\"fa fa-street-view\" aria-hidden=\"true\"></i>\r\n                            </span>\r\n                            <span className=\"profile-card-loc__txt\">\r\n                                {update.address}\r\n                            </span>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-sections\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control disabled style={{height:\"45px\"}} placeholder=\"Enter Hospital name\" value={update.email} name=\"hospital_name\" id=\"HospitalName\" type=\"text\" className=\"Hospital-Name\" />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please Enter a valid email.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Registration Number</Form.Label>\r\n                                    <Form.Control disabled style={{height:\"45px\"}} placeholder=\"Enter Registeration number\" name=\"hospital_id\" value={update.hospital_id} id=\"HospitalRegister\" type=\"text\" className=\"Hospital-Register\"/> {/*isInvalid*/} \r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please Enter a valid email.\r\n                                    </Form.Control.Feedback> \r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Mobile Number</Form.Label>\r\n                                    <Form.Control disabled style={{height:\"45px\"}} placeholder=\"Enter Mobile number\" name=\"mobile_no\" value={update.mobile_no} id=\"mobile_no\" type=\"text\" className=\"mobile_no\"/> {/*isInvalid*/} \r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please Enter a valid email.\r\n                                    </Form.Control.Feedback> \r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"update-btn\">\r\n                        <LoadingButton />\r\n                    </div>\r\n                    {/* <Button onClick={handleClickVariant('success')}>Show success snackbar</Button> */}\r\n                    <Button style={{display:\"none\"}} className=\"update-snack-btn\" onClick={handleClick(TransitionUp)}>Down</Button>\r\n                    <Snackbar\r\n                        open={open}\r\n                        onClose={handleCloseUpdate}\r\n                        TransitionComponent={transition}\r\n                        message=\"Changes Updated\"\r\n                        key={transition ? transition.name : ''}\r\n                    />\r\n                </div> \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true)\r\n        e.target.click()\r\n    }\r\n\r\n    return (\r\n        <Button type=\"submit\" className='update-admin-profile-btn update-btn-view' variant=\"primary\" disabled={isLoading} onClick={!isLoading ? handleClick : null}>\r\n            {isLoading ?  <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : 'Save'}\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\n{/* <label  className=\"form-img__file-label\"> */}\r\n    {/* <svg width=\"150\" height=\"150\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#56ceef\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n        <path d=\"M5.52 19c.64-2.2 1.84-3 3.22-3h6.52c1.38 0 2.58.8 3.22 3\" />\r\n        <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n    </svg> */}\r\n{/* </label> */}\r\n","\r\nlet uniqId=()=>{\r\n    let uniq=()=>{\r\n       return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    let id=uniq() + uniq() + uniq() + uniq();\r\n    return id;\r\n}\r\n\r\nlet doctoruniqId=()=>{\r\n    let uniq=()=>{\r\n       return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    let id=uniq() + uniq() + uniq();\r\n    return id;\r\n}\r\n\r\nlet doctorPassword=()=>{\r\n    let paswd=()=>{\r\n       return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    let id=paswd() + paswd();\r\n    return id;\r\n}\r\n\r\nlet patientID=()=>{\r\n    let uniq=()=>{\r\n       return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    let id=uniq() + uniq() + uniq();\r\n    return id;\r\n}\r\n\r\nexport { uniqId, doctoruniqId, doctorPassword, patientID };","import React, { useEffect, useState } from 'react';\r\nimport { Form, Spinner, Container, Col, Row, InputGroup, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'react-bootstrap'\r\nimport { doctoruniqId, doctorPassword } from './../../../Unique.js'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport axios from 'axios'\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default function Doctor(props) {\r\n\r\n    const [doctor,setDoctor] = useState({\r\n        dept:'',email:'',doctor_id:'',name:'',hospital_id:props.hospitalid,joined_date:'',\r\n        password_before_verification:doctorPassword(),app_id:doctoruniqId(),mobile_no:0\r\n    })\r\n    const [modalShowRemove, setModalShowRemove] = React.useState(false)\r\n    const [modalShowAdd, setModalShowAdd] = React.useState(false)\r\n    const [tableData, setTableData] = React.useState([])\r\n    const [errText,setErrText] = React.useState([])\r\n    const [doctorData, setDoctorData] = React.useState([])\r\n    const [muiData, setMuiData] = React.useState([])\r\n    const [open, setOpen] = React.useState(false);\r\n    const [transition, setTransition] = React.useState(undefined);\r\n    const hospital_id=doctor.hospital_id\r\n\r\n    const handleClick = (Transition) => () => {\r\n        setTransition(() => Transition);\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleCloseAdd = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let hideAddDoctor=()=>{\r\n        setDoctor({\r\n                dept:'',email:'',doctor_id:'',name:'',hospital_id:props.hospitalid,joined_date:'',\r\n                password_before_verification:doctorPassword(),app_id:doctoruniqId(),mobile_no:0\r\n            }) \r\n        setErrText([]) \r\n        document.querySelector('.create-doctor-modal').classList.add('animate__backOutDown')\r\n        setTimeout(()=>{\r\n            setModalShowAdd(false)\r\n        },1000)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getDepartments()\r\n        getDoctorData()\r\n    },[])\r\n\r\n    let getDepartments = async () => {\r\n\r\n        let response=await fetch('/api/hospital-dept/',{\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n        let content=await response.json()\r\n        setTableData(content)\r\n    }\r\n\r\n    let getDoctorData=async ()=>{\r\n        let response=await fetch(`/api/doctor/lists/?hospital_id=${hospital_id}`)\r\n        let content=await response.json()\r\n        setDoctorData(content)\r\n        // console.log(content)   \r\n        let doctorArr=[]\r\n        content.slice(0).reverse().map((data) => (\r\n            doctorArr.push({\r\n                \"Doctor\":data.name,\r\n                \"Email\":data.email,\r\n                \"Password\":data.password_before_verification,\r\n                \"Status\":data.email_Verified.toString(),\r\n            })  \r\n        ))\r\n        setMuiData(doctorArr)\r\n    }\r\n\r\n    const columns = [\r\n    {\r\n        name: \"Doctor\",\r\n        label: \"Doctor\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"Email\",\r\n        label: \"Email\",\r\n        options: {\r\n            filter: true,\r\n            sort: true,\r\n        }\r\n    },\r\n    {\r\n        name: \"Password\",\r\n        label: \"Password\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    {\r\n        name: \"Status\",\r\n        label: \"Status\",\r\n        options: {\r\n            filter: true,\r\n            sort: false,\r\n        }\r\n    },\r\n    ];\r\n\r\n    /* const data = [\r\n        { Doctor: \"Joe James\", Email: \"Test Corp\", Password: \"Yonkers\", Status: \"NY\" },\r\n        { Doctor: \"John Walsh\", Email: \"Test Corp\", Password: \"Hartford\", Status: \"CT\" },\r\n        { Doctor: \"Bob Herm\", Email: \"Test Corp\", Password: \"Tampa\", Status: \"FL\" },\r\n        { Doctor: \"James Houston\", Email: \"Test Corp\", Password: \"Dallas\", Status: \"TX\" },\r\n    ]; */\r\n\r\n    const options = {\r\n        filterType: 'checkbox',\r\n    };\r\n\r\n    let collectData=(event)=>{\r\n        setDoctor({...doctor,[event.target.name]:event.target.value})\r\n        try{\r\n            if(doctor.name !== \"\" && doctor.dept !== \"\" && doctor.email !== \"\" && doctor.doctor_id  !== \"\" && doctor.mobile_no  !== \"\"){\r\n                document.querySelector('.create-doctor-btn').removeAttribute('disabled')\r\n            }\r\n            else{\r\n                document.querySelector('.create-doctor-btn').setAttribute('disabled',true)\r\n            }\r\n        }\r\n        catch(ex){}\r\n    }\r\n\r\n    let createDoctorsAccount=async (e)=>{\r\n        e.preventDefault();\r\n        setDoctor({\r\n            dept:doctor.dept,email:doctor.email,doctor_id:doctor.doctor_id,name:doctor.name,hospital_id:doctor.hospital_id,\r\n            joined_date:doctor.joined_date,password_before_verification:doctorPassword(),app_id:doctoruniqId(),mobile_no:doctor.mobile_no\r\n        })\r\n        let response=await fetch(\"/api/doctor/account-create/\",{\r\n            method:\"POST\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify(doctor)\r\n        })\r\n        let content=await response.json()\r\n        let response_length=Object.keys(content).length\r\n        let response_status=response.status\r\n        if(response_status===400){\r\n            setErrText(content)\r\n            document.querySelector('.create-doctor-modal').classList.add('animate__tada')\r\n            setTimeout(()=>{\r\n                document.querySelector('.create-doctor-modal').classList.remove('animate__tada')\r\n            },1000)\r\n        }\r\n        else if(response_status===200){\r\n            setDoctor({\r\n                dept:'',email:'',doctor_id:'',name:'',hospital_id:props.hospitalid,joined_date:'',\r\n                password_before_verification:doctorPassword(),app_id:doctoruniqId(),mobile_no:0\r\n            }) \r\n            setErrText([]) \r\n            getDoctorData()\r\n            document.querySelector('.update-snack-btn').click() \r\n        }\r\n        else{\r\n            console.log(\"something gone wrong\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"doctors-details\">\r\n            <h3 className=\"text-center doctor-title m-4\">List of Doctors</h3><br/>\r\n            <div className=\"doctor-window-content\">\r\n                <div className=\"button-options row justify-content-around\">\r\n                    <div className=\"col-4\">\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={() => setModalShowRemove(true)} type=\"button\">Existing Doctor Account</Button>\r\n                        <Modal show={modalShowRemove} onHide={() => setModalShowRemove(false)}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                            >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Modal heading\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Form>\r\n                                <Modal.Body>\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col xs={12} md={8}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-name\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className='fas fa-user-md'></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control onInput={collectData} onChange={collectData} style={{height:\"45px\"}} value={doctor.name} placeholder=\"Doctor's Name\" name=\"name\" id=\"doctor-name\" type=\"text\" className=\"doctor-name-info\" />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            Please Enter a valid email.\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group>  \r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button onClick={() => setModalShowRemove(false)}>Close</Button>\r\n                                </Modal.Footer>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Button variant=\"primary\" onClick={() => setModalShowAdd(true)} size=\"lg\" type=\"button\">New Doctor Account</Button>\r\n                        <Modal className=\"animate__animated animate__faster create-doctor-modal\" size=\"lg\" show={modalShowAdd} onHide={() => setModalShowAdd(false)}  aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                    Create Account For Your Doctors\r\n                                </Modal.Title>\r\n                            </Modal.Header>\r\n                            <Form onSubmit={createDoctorsAccount} method=\"POST\">\r\n                                <Modal.Body className=\"show-grid\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col xs={12} md={8}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-name\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className='fas fa-user-md'></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control onInput={collectData} onChange={collectData} style={{height:\"45px\"}} value={doctor.name} placeholder=\"Doctor's Name\" name=\"name\" id=\"doctor-name\" type=\"text\" className=\"doctor-name-info\" />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            Please Enter a valid email.\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group>  \r\n                                            </Col>\r\n                                            <Col xs={6} md={4}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-dept\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className='fas fa-clinic-medical'></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                       {/*  <Form.Control style={{height:\"45px\"}} onSelect={collectData} onInput={collectData} onChange={collectData} list=\"department-datalist\" placeholder=\"Enter Department\" name=\"dept\" id=\"doctor-dept\" type=\"text\" className=\"doctor-dept-info\" />\r\n                                                        <datalist id=\"department-datalist\">\r\n                                                            {tableData.map((data) => (\r\n                                                                <option key={data.id} value={data.department} />\r\n                                                            ))}\r\n                                                        </datalist> */}\r\n                                                        <select className=\"form-select form-select-lg mb-3 doctor-dept-info\" style={{height:\"45px\"}} onSelect={collectData} onInput={collectData} onChange={collectData} \r\n                                                            list=\"department-datalist\" placeholder=\"Enter Department\" name=\"dept\" id=\"doctor-dept\" value={doctor.dept}\r\n                                                            aria-label=\".form-select-lg example\"\r\n                                                        >\r\n                                                            <option value=''>Specialization</option>\r\n                                                            {tableData.map((data) => (\r\n                                                                <option key={data.id} value={data.department}>{data.department}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group> \r\n                                            </Col>\r\n                                        </Row><br />\r\n                                        <Row>\r\n                                            <Col xs={12} md={8}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-email\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control isInvalid={errText.email} style={{height:\"45px\"}} onInput={collectData} onChange={collectData} value={doctor.email} \r\n                                                            placeholder=\"Doctor's Email\" name=\"email\" id=\"doctor-email\" type=\"email\" className=\"doctor-email-info\" \r\n                                                        />\r\n                                                        <Form.Control.Feedback style={{padding:\"5px\"}} type=\"invalid\">\r\n                                                            { errText.email ? 'Email is already Exists' : '' }\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group>  \r\n                                            </Col>\r\n                                            <Col xs={6} md={4}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-mobile\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className='bx bx-mobile'></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control style={{height:\"45px\"}} onInput={collectData} onChange={collectData} type=\"tel\" value={doctor.mobile_no===0 ? \"\" : doctor.mobile_no}  \r\n                                                            isInvalid={errText.mobile_no} placeholder=\"Mobile Number\" name=\"mobile_no\" id=\"doctor-mobile\" className=\"doctor-mobile-info\" \r\n                                                        />\r\n                                                        <Form.Control.Feedback style={{padding:\"5px\"}} type=\"invalid\">\r\n                                                            { errText.mobile_no ? \"Mobile number not available\" : '' }\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group> \r\n                                            </Col>\r\n                                        </Row><br />\r\n                                        <Row>\r\n                                            <Col xs={12} md={8}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-id\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className='bx bx-id-card'></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control isInvalid={errText.doctor_id} style={{height:\"45px\"}} onInput={collectData} onChange={collectData} value={doctor.doctor_id} \r\n                                                            placeholder=\"Doctor's ID\" name=\"doctor_id\" id=\"doctor-id\" type=\"text\" className=\"doctor-id-info\" \r\n                                                        />\r\n                                                        <Form.Control.Feedback style={{padding:\"5px\"}} type=\"invalid\">\r\n                                                            { errText.doctor_id ? 'Doctor ID is already Exists' : ''}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group>  \r\n                                            </Col>\r\n                                            <Col xs={6} md={4}>\r\n                                                <Form.Group>\r\n                                                    <InputGroup hasValidation>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <label htmlFor=\"doctor-joined\" style={{cursor:\"pointer\"}}>\r\n                                                                <InputGroup.Text style={{height:\"45px\"}}><i className='bx bx-calendar'></i></InputGroup.Text>\r\n                                                            </label>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control style={{height:\"45px\"}} onInput={collectData} onChange={collectData} type=\"date\" value={doctor.joined_date}  \r\n                                                            placeholder=\"Joined Date\" name=\"joined_date\" id=\"doctor-joined\" className=\"doctor-joined-info\" \r\n                                                        />\r\n                                                        <Form.Control.Feedback style={{padding:\"5px\"}} type=\"invalid\">\r\n                                                            Please Enter a valid email.\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>                                               \r\n                                                </Form.Group> \r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                </Modal.Body>\r\n                                <Modal.Footer className=\"border d-flex align-items-center justify-content-around\">\r\n                                    <Button size=\"lg\" variant=\"danger\" onClick={hideAddDoctor}>Close</Button>\r\n                                    <Button size=\"lg\" className=\"create-doctor-btn\" disabled type=\"submit\">Create</Button>\r\n                                </Modal.Footer> \r\n                            </Form>\r\n                        </Modal>   \r\n                    </div>\r\n                </div>\r\n                <Button style={{display:\"none\"}} className=\"update-snack-btn\" onClick={handleClick(TransitionUp)}>Down</Button>\r\n                <Snackbar open={open} onClose={handleCloseAdd} TransitionComponent={transition} message=\"Doctor Account Created\" key={transition ? transition.name : ''} />\r\n                <div style={{ height: 400, width: '80%', margin:'auto' }}>\r\n                    <div style={{ display: 'flex', height: '100%' }}>\r\n                        <div style={{ flexGrow: 1 }}>\r\n                            <MUIDataTable title={\"Doctor's List\"} data={muiData} columns={columns} options={options} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React,{ useEffect, useState } from 'react'\r\nimport dateFormat from 'dateformat'\r\nimport Scroll from 'react-scroll';\r\n\r\nvar Link = Scroll.Link;\r\nvar DirectLink = Scroll.DirectLink;\r\nvar Element = Scroll.Element;\r\nvar Events = Scroll.Events;\r\nvar scroll = Scroll.animateScroll;\r\nvar scrollSpy = Scroll.scrollSpy;\r\n\r\nexport default function LiveUpdates({patientData}) {\r\n    \r\n    const [count, setCount]=useState(0)\r\n\r\n    return (\r\n        <div style={{marginTop:\"45px\"}} className=\"live-updates-under-admin\">\r\n            <h5 className=\"text-center\" style={{fontFamily:\"'Racing Sans One',cursive\",fontSize:\"25px\",paddingBottom:\"5px\"}}>Recent Updates</h5>\r\n            <Link activeClass=\"active\" to=\"secondInsideContainer\" className=\"clickScroll\" smooth={true} duration={5000} containerId=\"containerElement\" style={{ display: 'none', margin: '20px' }}>click</Link>\r\n            <Element name=\"test7\" className=\"element live-updates-section\" id=\"containerElement\" style={{ position: 'relative',marginTop:\"20px\",paddingTop:\"-20px\",paddingBottom:\"65px\", height: '85vh', overflow: 'scroll', marginBottom: '30px'}}>\r\n                <div className=\"live-content-msg\">\r\n                    {\r\n                        patientData.map((data) => (\r\n                            <p onLoad={() => setCount((count+ 2))} className=\"list-patient-live\" style={{animationDelay:`${count}+s`}} key={data.id}>\r\n                                {data.patient_name}'s Account Created &nbsp; \r\n                                    <span className=\"live-span-top\" style={{fontSize:\"11px\"}}><sup>{dateFormat(data.created_at, \"mmmm dS, yyyy\")}</sup></span>\r\n                            </p> \r\n                        ))              \r\n                    } \r\n                </div>\r\n                <Element name=\"secondInsideContainer\">\r\n                </Element>\r\n            </Element>\r\n        </div>\r\n    )\r\n}\r\n","import React,{ useEffect, useState, useRef, createRef, useContext } from 'react'\r\nimport { TransitionGroup } from 'react-transition-group'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { patientID, doctorPassword } from './../../../Unique.js'\r\nimport { Container, Button, Form, InputGroup, Row, Col, Spinner, Popover, OverlayTrigger } from 'react-bootstrap'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\r\nimport EventNoteIcon from '@material-ui/icons/EventNote'\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail'\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport LiveUpdates from './LiveUpdates'\r\n\r\nvar validator = require('aadhaar-validator')\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default function Patient(props) {\r\n    const inputFocusRef=useRef()\r\n    \r\n    const [patientData, setPatientData]=useState([])\r\n\r\n    const [patientAccount,setPatientAccount]=useState({\r\n        patient_name:'',email:'',account_created_hospital_id:props.hospitalid,address:'',\r\n        password:doctorPassword(),aadhar_number:'',app_id:patientID(),mobile_no:0,date_of_birth:''\r\n    })\r\n\r\n    const [valid,setValid]=useState(false)\r\n    const [open, setOpen] = React.useState(false);\r\n    const [transition, setTransition] = React.useState(undefined);\r\n    const [isAadharErr,setIsAadharErr]=React.useState(false)\r\n    const [aadharMsg,setAadharMsg]=React.useState(\"\")\r\n    const [isMobileErr,setIsMobileErr]=React.useState(false)\r\n    const [mobileMsg,setMobileMsg]=React.useState(\"\")\r\n    const [isEmailErr,setIsEmailErr]=React.useState(false)\r\n    const [emailMsg,setEmailMsg]=React.useState(\"\")\r\n\r\n    let collectData=(event)=>{\r\n        if(event.target.name===\"aadhar_number\"){\r\n            let isValid=validator.isValidNumber(event.target.value)\r\n            if(isValid){\r\n                setIsAadharErr(false)\r\n                setValid(true)\r\n                setIsAadharErr(false)\r\n                setAadharMsg(\"\")\r\n\r\n            }\r\n            else{\r\n                setValid(false)\r\n                setIsAadharErr(true)\r\n                setAadharMsg(\"Aadhar Card Number is not Valid\")\r\n            }\r\n        }\r\n        else{\r\n            setValid(true)\r\n        }\r\n        setIsMobileErr(false)\r\n        setIsEmailErr(false)\r\n        // setValid(true)\r\n        setPatientAccount({...patientAccount,[event.target.name]:event.target.value})\r\n    }\r\n\r\n    let createPatientAccount=async (e)=>{\r\n        e.preventDefault()\r\n        // let formField=new FormData()\r\n        // formField.append() \r\n        let isValid=validator.isValidNumber(patientAccount.aadhar_number)\r\n        if(isValid){\r\n            setIsAadharErr(false)\r\n            setValid(true)\r\n            setIsAadharErr(false)\r\n            setAadharMsg(\"\")\r\n\r\n            setPatientAccount({\r\n                patient_name:patientAccount.patient_name,email:patientAccount.email,account_created_hospital_id:props.hospitalid,address:patientAccount.address,\r\n                password:doctorPassword(),aadhar_number:patientAccount.aadhar_number,app_id:patientID(),mobile_no:patientAccount.mobile_no,date_of_birth:patientAccount.date_of_birth\r\n            })\r\n\r\n            let response=await fetch(\"/api/patient/account-create/\",{\r\n                headers:{'Content-Type':'application/json'},\r\n                method:\"POST\",\r\n                credentials:'include',\r\n                body:JSON.stringify(patientAccount)\r\n            })\r\n            let content=await response.json()\r\n            if(content.aadhar_number){\r\n                setValid(false)\r\n                setIsAadharErr(true)\r\n                setAadharMsg(\"Aadhar Card Number is already Registeed\")\r\n            }\r\n            if(content.mobile_no){\r\n                setValid(false)\r\n                setIsMobileErr(true)\r\n                setMobileMsg(\"Mobile Number is already taken\")\r\n            }\r\n            if(content.email){\r\n                setValid(false)\r\n                setIsEmailErr(true)\r\n                setEmailMsg(\"Email is already taken\")\r\n            }\r\n            if(content.message){\r\n                getPatientList()\r\n                setPatientAccount({\r\n                    patient_name:'',email:'',account_created_hospital_id:'',address:'',\r\n                    password:doctorPassword(),aadhar_number:'',app_id:patientID(),mobile_no:0,date_of_birth:''\r\n                })\r\n                document.querySelector('.update-snack-btn').click() \r\n            }\r\n            console.log(content)\r\n        }\r\n        else{\r\n            setValid(false)\r\n            setIsAadharErr(true)\r\n            setAadharMsg(\"Aadhar Card Number is not Valid\")\r\n        }\r\n    }\r\n\r\n    const handleClick = (Transition) => () => {\r\n        setTransition(() => Transition);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleCloseUpdate = () => {\r\n        setOpen(false);\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getPatientList()\r\n        setTimeout(()=>{\r\n            if(document.querySelector('.clickScroll'))\r\n                document.querySelector('.clickScroll').click()\r\n        },3000)\r\n    },[])\r\n\r\n    let getPatientList=async()=>{\r\n        let response=await fetch('/api/patient/lists/',{\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n        let content=await response.json()\r\n        setPatientData(content)\r\n        // console.log(content)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col xs={10} md={8}>\r\n                    <div>\r\n                        {/* <h3 className=\"text-center\">Create Unique ID for People</h3> */}\r\n                        <div className=\"patients-account-creation-form\">\r\n                            <h4 style={{textAlign:\"Center\",lineHeight:\"60px\"}} className=\"hospital-register-header\">Patient Registration</h4>  \r\n                            <Container>\r\n                                <Form style={{padding:\"20px\"}} onSubmit={createPatientAccount}>\r\n                                    <Form.Group>\r\n                                        <InputGroup hasValidation>\r\n                                            <InputGroup.Prepend>\r\n                                                <label htmlFor=\"patientName\" style={{cursor:\"pointer\"}}>\r\n                                                    <InputGroup.Text style={{height:\"45px\"}}><PersonIcon /></InputGroup.Text>\r\n                                                </label>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Patient name\" name=\"patient_name\" onChange={collectData} onKeyUp={collectData} ref={inputFocusRef} value={patientAccount.patient_name} id=\"patientName\" type=\"text\" className=\"Patient-Name\" required /> {/*isInvalid*/} \r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                Please Enter a valid email.\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group><br />\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <InputGroup hasValidation>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <label htmlFor=\"aadhar\" style={{cursor:\"pointer\"}}>\r\n                                                            <InputGroup.Text style={{height:\"45px\"}}><FingerprintIcon /></InputGroup.Text>\r\n                                                        </label>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control isInvalid={isAadharErr} style={{height:\"45px\"}} placeholder=\"Enter Aadhar Number\" name=\"aadhar_number\" onChange={collectData} onKeyUp={collectData} value={patientAccount.aadhar_number} id=\"aadhar\" type=\"number\" className=\"aadhar-number\" required /> {/*isInvalid*/} \r\n                                                    <Form.Control.Feedback style={{padding:\"5px 0\"}} type=\"invalid\">\r\n                                                        {aadharMsg}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <InputGroup hasValidation>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <label htmlFor=\"dob\" style={{cursor:\"pointer\"}}>\r\n                                                            <InputGroup.Text style={{height:\"45px\"}}><EventNoteIcon /></InputGroup.Text>\r\n                                                        </label>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Date of Birth\" name=\"date_of_birth\" onChange={collectData} onKeyUp={collectData} value={patientAccount.date_of_birth} type=\"date\" id=\"dob\" className=\"dob form-control\" required /> {/*isInvalid*/} \r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        Please Enter a valid email.\r\n                                                    </Form.Control.Feedback> \r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row><br /> \r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <InputGroup hasValidation>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <label htmlFor=\"email\" style={{cursor:\"pointer\"}}>\r\n                                                            <InputGroup.Text style={{height:\"45px\"}}><ContactMailIcon /></InputGroup.Text>\r\n                                                        </label>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control style={{height:\"45px\"}} isInvalid={isEmailErr} placeholder=\"Enter Email\" name=\"email\" onChange={collectData} onKeyUp={collectData} value={patientAccount.email} id=\"email\" type=\"email\" className=\"mail\" required /> {/*isInvalid*/} \r\n                                                    <Form.Control.Feedback style={{padding:\"5px 0\"}} type=\"invalid\">\r\n                                                        {emailMsg}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                                {/* <Form.Text style={{padding:\"5px 0\"}} className=\"text-muted\">\r\n                                                    We'll share this email with only Doctors.\r\n                                                </Form.Text> */}\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Group>\r\n                                                <InputGroup hasValidation>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <label htmlFor=\"phonenumber\" style={{cursor:\"pointer\"}}>\r\n                                                            <InputGroup.Text style={{height:\"45px\"}}><ContactPhoneIcon /></InputGroup.Text>\r\n                                                        </label>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control style={{height:\"45px\"}} isInvalid={isMobileErr} placeholder=\"Enter Mobile number\" name=\"mobile_no\" onChange={collectData} onKeyUp={collectData} value={patientAccount.mobile_no===0 ? \"\" : patientAccount.mobile_no} type=\"tel\" id=\"phonenumber\" className=\"mobile-number form-control\" required /> {/*isInvalid*/} \r\n                                                    <Form.Control.Feedback style={{padding:\"5px 0\"}} type=\"invalid\">\r\n                                                        {mobileMsg}\r\n                                                    </Form.Control.Feedback> \r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row><br />                    \r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"mb-3\">\r\n                                                <textarea value={patientAccount.address} className=\"form-control\" name=\"address\" placeholder=\"Enter the Address\"  onChange={collectData} onKeyUp={collectData} rows=\"5\" required></textarea>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row><br />\r\n                                    <Row>\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                            { valid ?  <LoadingButton/> : <Button type=\"button\" disabled varint=\"primary\">Register</Button> }                           \r\n                                            <Button style={{display:\"none\"}} className=\"update-snack-btn animate__animated\" onClick={handleClick(TransitionUp)}>Down</Button>\r\n                                            <Snackbar\r\n                                                open={open}\r\n                                                onClose={handleCloseUpdate}\r\n                                                TransitionComponent={transition}\r\n                                                message=\"Account Created Successfully\"\r\n                                                key={transition ? transition.name : ''}\r\n                                            />\r\n                                        </div>  \r\n                                    </Row> \r\n                                </Form>\r\n                            </Container> \r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={6} md={4}>\r\n                    <LiveUpdates patientData={patientData} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true);\r\n        e.target.click()\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title className=\"text-center\" as=\"h3\">Are You Sure ?</Popover.Title>\r\n            <Popover.Content>\r\n                Check the Provided Details <strong>Once again</strong> before clicking this button\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    return (\r\n        <OverlayTrigger trigger={[\"hover\", \"hover\"]} placement=\"top\" overlay={popover}>\r\n            <Button size=\"lg\" variant=\"primary\" type=\"submit\" disabled={isLoading} onClick={!isLoading ? handleClick : null}>\r\n                {isLoading ? <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"lg\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                /> : 'Register'}\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Form, Button, InputGroup, Navbar, Col, Row, FormControl } from 'react-bootstrap'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport axios from 'axios'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\n/* \r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n]; */\r\n\r\nexport default function Department() {\r\n    const [ tableData, setTableData ]=useState([])\r\n    const classes = useStyles();\r\n    const [ department, setDepartment ]=useState(\"\");\r\n    const [ deptErr, setDeptErr ]=useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    let saveDept=async(e)=>{\r\n        e.preventDefault();\r\n        if(department===\"\"){\r\n            setDeptErr(true)\r\n        }\r\n        else{\r\n            setDeptErr(false)\r\n\r\n            let res=await fetch('/api/hospital-admin/',{\r\n                headers:{'Content-Type': 'application/json'},\r\n                credentials:'include'\r\n            })\r\n            let con=await res.json()\r\n\r\n            let formField=new FormData()\r\n            formField.append('user_id',con.user_id)\r\n            formField.append('department',department)\r\n\r\n            let send=await axios({\r\n                method:\"POST\",\r\n                url:\"/api/hospital-dept-add/\",\r\n                data:formField,\r\n                headers:{'Content-Type':'application/json'},\r\n                credentials:'include'\r\n            }).then((response)=>{\r\n                let status=response.data.message\r\n                if(status===\"success\"){\r\n                    setDepartment(\"\")\r\n                    getDepartments()\r\n                    document.querySelector('.dept-added').click()\r\n                }    \r\n                else{\r\n                    // setDepartment(\"\")\r\n                    console.log(\"D\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getDepartments()\r\n    },[])\r\n\r\n    const getDepartments=async()=>{\r\n        let response=await fetch('/api/hospital-dept/',{\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n        let content=await response.json()\r\n        setTableData(content)\r\n        // console.log(tableData)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{width:\"80%\",margin:\"auto\"}}>\r\n            <h3 style={{textAlign:\"center\",height:\"60px\",marginTop:\"30px\"}}>List of Departments</h3>\r\n            <Row>\r\n                <Col>\r\n                    <Form onSubmit={saveDept} style={{maxWidth:\"70%\",margin:'auto'}} inline method=\"POST\">\r\n                        <Form.Group>\r\n                            <InputGroup hasValidation>\r\n                                <InputGroup.Prepend>\r\n                                    <label htmlFor=\"dept-name\" style={{cursor:\"pointer\"}}>\r\n                                        <InputGroup.Text style={{height:\"45px\"}}><i className='far fa-address-card'></i></InputGroup.Text>\r\n                                    </label>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control isInvalid={deptErr} style={{height:\"45px\"}} onChange={(e)=>setDepartment(e.target.value)} onInput={(e)=>setDepartment(e.target.value)} value={department} placeholder=\"Enter Department Name\" name=\"dept\" id=\"dept-name\" type=\"text\" className=\"dept-name-info\" />\r\n                                <br />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Field is Empty.\r\n                                </Form.Control.Feedback>\r\n                                <Button type=\"submit\" size=\"lg\" variant=\"primary\">Add New</Button>\r\n                            </InputGroup>                                               \r\n                        </Form.Group>  \r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <TableContainer style={{width:\"60%\",margin:\"auto\",overflow:\"hidden\",marginTop:\"20px\"}} component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        {/* <TableCell style={{fontSize:\"22px\"}} className=\"text-center\">Departments</TableCell> */}\r\n                        {/* <TableCell align=\"right\">Total Doctors</TableCell> */}\r\n                        {/* <TableCell align=\"right\"></TableCell> */}\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {tableData.slice(0).reverse().map((data) => (\r\n                        <TableRow key={data.id}>\r\n                            <TableCell style={{fontSize:\"18px\"}} component=\"th\" scope=\"row\">\r\n                                {data.department}\r\n                            </TableCell>\r\n                            {/* <TableCell align=\"right\"></TableCell> */}\r\n                            {/* <TableCell align=\"right\">}</TableCell> */}\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>     \r\n            <Button variant=\"outlined\" className=\"dept-added\" style={{display:\"none\"}} onClick={handleClick}>\r\n                Open success snackbar\r\n            </Button>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Department Added Successfully\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect,useState } from 'react'\r\nimport Chart from 'react-google-charts'\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const [ totalDoctors, setTotalDoctors ]=useState(0)\r\n    const [ verifiedDoctors,setVerifiedDoctors ]=useState(0)\r\n    const [ notVerifiedDoctors,setNotVerifiedDoctors ]=useState(0)\r\n    const [ totalIDCreated,setTotalIDCreated ]=useState(0)\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                let response=await fetch(`/api/doctor/hospital-total-view/?hospital_id=${props.hospitalid}`)\r\n                let content=await response.json()\r\n                console.log(content)\r\n                setTotalDoctors(content.total_doctors)\r\n                setVerifiedDoctors(content.verified_doctors)\r\n                setNotVerifiedDoctors(content.not_verified_doctors)\r\n                setTotalIDCreated(content.total_patient_id_created)\r\n            }\r\n        )()\r\n    })\r\n\r\n    useEffect(()=>{\r\n        var counters=document.querySelectorAll('.total-count');\r\n        var speed=20000;\r\n        counters.forEach(counter=>{\r\n            var updateCount=()=>{\r\n                var target=+counter.getAttribute('data-target');\r\n                var count=+counter.innerText;\r\n                var inc=target/speed;\r\n                if(count<target){\r\n                    counter.innerText=Math.ceil(count+inc);\r\n                    setTimeout(updateCount,1);\r\n                }\r\n                else{\r\n                    counter.innerText=target;\r\n                }\r\n\r\n            }\r\n            updateCount();\r\n        });\r\n    },[])\r\n   \r\n    return (\r\n        <div className=\"dashboard-content chart\">\r\n        <center>\r\n            <div class=\"grid-count\">\r\n                <div class=\"count-display book-count\">\r\n                    <h4>Total Doctors</h4>\r\n                    <h2 class='total-count' data-target={totalDoctors}>{totalDoctors}</h2>\r\n                </div>\r\n                <div class=\"count-display member-count\">\r\n                    <h4>No.of Verified Doctors</h4>\r\n                    <h2 class='total-count' data-target={verifiedDoctors}>{verifiedDoctors}</h2>\r\n                </div>\r\n                <div class=\"count-display book-count\">\r\n                    <h4>No.of Unverified Doctors</h4>\r\n                    <h2 class='total-count' data-target={notVerifiedDoctors}>{notVerifiedDoctors}</h2>\r\n                </div>\r\n                <div class=\"count-display book-count\">\r\n                    <h4>Patients Registered</h4>\r\n                    <h2 class='total-count' data-target={totalIDCreated}>{totalIDCreated}</h2>\r\n                </div>\r\n            </div>\r\n        </center>\r\n            {/* <div class=\"chart-display d-flex justify-content-around\" style={{overflow:\"hidden\"}}>\r\n                <Chart\r\n                    width={'500px'}\r\n                    height={'500px'}\r\n                    chartType=\"PieChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={[\r\n                        ['Task', 'Hours per Day'],\r\n                        ['Work', 11],\r\n                        ['Eat', 2],\r\n                        ['Commute', 2],\r\n                        ['Watch TV', 2],\r\n                        ['Sleep', 7],\r\n                    ]}\r\n                    options={{\r\n                        title: 'My Daily Activities',\r\n                        is3D: true,\r\n                    }}\r\n                    rootProps={{ 'data-testid': '2' }}\r\n                />\r\n                <Chart\r\n                    width={'400px'}\r\n                    height={'400px'}\r\n                    chartType=\"PieChart\"\r\n                    loader={<div>Loading Chart</div>}\r\n                    data={[\r\n                        ['Language', 'Speakers (in millions)'],\r\n                        ['Assamese', 13],\r\n                        ['Bengali', 83],\r\n                        ['Bodo', 1.4],\r\n                        ['Dogri', 2.3],\r\n                        ['Gujarati', 46],\r\n                        ['Hindi', 300],\r\n                        ['Kannada', 38],\r\n                        ['Kashmiri', 5.5],\r\n                        ['Konkani', 5],\r\n                        ['Maithili', 20],\r\n                        ['Malayalam', 33],\r\n                        ['Manipuri', 1.5],\r\n                        ['Marathi', 72],\r\n                        ['Nepali', 2.9],\r\n                        ['Oriya', 33],\r\n                        ['Punjabi', 29],\r\n                        ['Sanskrit', 0.01],\r\n                        ['Santhali', 6.5],\r\n                        ['Sindhi', 2.5],\r\n                        ['Tamil', 61],\r\n                        ['Telugu', 74],\r\n                        ['Urdu', 52],\r\n                    ]}\r\n                    options={{\r\n                        title: 'Indian Language Use',\r\n                        legend: 'none',\r\n                        pieSliceText: 'label',\r\n                        slices: {\r\n                        4: { offset: 0.2 },\r\n                        12: { offset: 0.3 },\r\n                        14: { offset: 0.4 },\r\n                        15: { offset: 0.5 },\r\n                        },\r\n                    }}\r\n                    rootProps={{ 'data-testid': '5' }}\r\n                /> \r\n            </div>   */}         \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Profile from './Profile'\r\nimport Settings from './Settings'\r\nimport BloodBank from'./BloodBank'\r\nimport Doctor from'./Doctor'\r\nimport Patient from'./Patient'\r\nimport Department from'./Department'\r\nimport Dashboard from './Dashboard'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}))\r\n\r\nlet DefaultContent=(props)=>{\r\n    const [ verifyStatus, setVerifyStatus ]=useState(\"\")\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const status = queryParams.get('status');\r\n        setVerifyStatus(status)\r\n        setTimeout(()=>{\r\n            setVerifyStatus(\"\")\r\n        },10000)\r\n    },[])\r\n\r\n    return(\r\n        <div className={classes.root} >\r\n            {\r\n                verifyStatus===\"success\" ?\r\n                    <Alert className=\"email-success-alert animate__animated\" variant=\"filled\" severity=\"success\">\r\n                        Email Verified and Account Activated Successfully\r\n                    </Alert>\r\n                : ''\r\n            }\r\n            <div className=\"default-content\">\r\n                <Dashboard hospitalid={props.hospitalid} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet ProfileContent=(props)=>{\r\n    useEffect(()=>{\r\n        // document.querySelector('.main-container').style.background=\"linear-gradient(-20deg, #7f2de6 0%, #03f6d9 100%)\";  \r\n    },[])\r\n    return(\r\n        <div className=\"profile-content\">\r\n            <Profile hospitalid={props.hospitalid} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet DoctorContent=(props)=>{\r\n    return( \r\n        <div className=\"doctor-content\">\r\n            <Doctor hospitalid={props.hospitalid} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet PatientContent=(props)=>{\r\n    useEffect(()=>{\r\n        document.querySelector('body').style.overflow=\"hidden\"\r\n    })\r\n    return( \r\n        <div className=\"patient-content\">\r\n            <Patient hospitalid={props.hospitalid} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet SettingsContent=()=>{\r\n    return(\r\n        <div className=\"settings-content\">\r\n            <Settings />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet DepartmentContent=()=>{\r\n    return( \r\n        <div className=\"bloodbank-content\">\r\n            <Department />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet BloodBankContent=()=>{\r\n    return( \r\n        <div className=\"bloodbank-content\">\r\n            <BloodBank />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet Footer=()=>{\r\n    return(\r\n        <footer>\r\n            <h4>footer</h4>\r\n        </footer>\r\n    );\r\n}\r\n\r\nlet NotFound=()=>{\r\n    return(\r\n        <div>\r\n            <h1>Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { DefaultContent, ProfileContent, SettingsContent, BloodBankContent, DoctorContent, PatientContent, DepartmentContent, Footer, NotFound }","export default __webpack_public_path__ + \"static/media/img4.fdd7edb3.svg\";","import React from 'react'\r\nimport img from './../../../../images/img4.svg'\r\n\r\nexport default function Working() {\r\n    return (\r\n        <div style={{height:\"100%\",overflow:\"hidden\",transform:\"translateY(50%)\"}}>\r\n            <center>\r\n                <img height=\"250px\" src={img}/><br />\r\n                <h3 style={{fontFamily:\"jokerman\",fontStyle:\"italic\",color:\"green\"}}>Under Construction</h3>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'react-bootstrap'\r\nimport { Tooltip } from 'reactstrap';\r\nimport { Route, BrowserRouter, Link, NavLink, Switch } from 'react-router-dom'\r\nimport { DefaultContent, ProfileContent, SettingsContent, BloodBankContent, DoctorContent, PatientContent, DepartmentContent, Footer, Greet, NotFound } from './Admin'\r\nimport Working from './Working'\r\n\r\nexport default function NavSection(props){\r\n\r\n    const [ isSuccess, setIsSuccess ]=useState(false)\r\n    const { buttonLabel, className } = props;\r\n    const [modal, setModal] = useState(false);\r\n    const [ visibleContent, setVisibleContent ]=useState(\"Default\")\r\n    const [adminLogoPath,setAdminLogoPath] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setAdminLogoPath(\"https://www.shareicon.net/data/2016/07/26/801997_user_512x512.png\")\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                let response=await fetch('/api/hospital-admin/',{\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    credentials:'include'\r\n                })\r\n                let content=await response.json()\r\n                let isErr=content.detail\r\n                if(isErr===\"Unauthenticated\"){\r\n                    logout();\r\n                }\r\n                else{\r\n                    let imgLogo=content.logo\r\n                    setAdminLogoPath(\"\"+imgLogo)\r\n                    // let imgLogoModified=imgLogo.replaceAll(\"/media/media\", \"/media\")// imgLogo.replace(\"/media\", \"\")\r\n                    // setAdminLogoPath(require(\"./../../../../backend\"+imgLogoModified).default)\r\n                }\r\n            }\r\n        )()\r\n    })\r\n\r\n    const toggle = (e) => {\r\n        setModal(!modal);\r\n        if(e.target.name===\"logout\"){\r\n            logout()\r\n        }\r\n    }\r\n\r\n    let logout=async ()=>{\r\n        handleClose()\r\n        let response=await fetch('/api/hospital-logout/',{\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n        if(content.message==='success'){\r\n            localStorage.removeItem('JAM_DISPLAY_CONTENT')  \r\n            window.location.href='/'    \r\n            setIsSuccess(true)\r\n        }\r\n    }\r\n\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    const [tooltipOpen2, setTooltipOpen2] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () =>  setShow(true);\r\n\r\n    const toggleTooltipClose = () => setTooltipOpen(!tooltipOpen);\r\n    const toggleTooltipLogout = () => setTooltipOpen2(!tooltipOpen2);\r\n\r\n    let maxNav=()=>{\r\n        let sideNavBar=document.querySelector(\".sidebar-nav-main\")\r\n        sideNavBar.classList.toggle('active-nav')\r\n    }\r\n\r\n    // let activeTab=(e)=>{\r\n    //     let modify=e.target.getAttribute(\"datatarget\")-1\r\n    //     let count=listItems.length\r\n    //     console.log(modify)\r\n    //     document.querySelectorAll('.nav-list-section .alink')[modify].classList.add('active')\r\n    //     for(let i=0;i<count;i++)\r\n    //         if(i!=modify)\r\n    //             document.querySelectorAll('.nav-list-section .alink')[i].classList.remove('active')\r\n    //         else\r\n    //             continue;\r\n    // }\r\n\r\n    // let listItems=document.querySelectorAll('.nav-list-section .alink');\r\n    // for(let i=0;i<listItems.length;i++){\r\n    //     listItems[i].addEventListener('click',activeTab)\r\n    // }\r\n\r\n    return(\r\n        <BrowserRouter>\r\n            <div className=\"admin-container\">\r\n                <div className=\"sidebar-nav-main\">\r\n                    <div className=\"logo-content\">\r\n                        <div className=\"logo\" style={{textAlign: 'center'}} >\r\n                            {/* <i className=\"fas fa-hospital-alt\" aria-hidden=\"true\"></i> */}\r\n                            {/* <i className=\"fas fa-hospital-user\" aria-hidden=\"true\"></i> */}\r\n                            <i className=\"fa fa-hospital-o\" aria-hidden=\"true\"></i>\r\n                            {/* <div className=\"logo-name\">Admin</div> */}\r\n                        </div>\r\n                        <i className=\"bx bx-menu\" onClick={maxNav} id=\"btn\"></i>\r\n                        {/* <Tooltip placement=\"right\" isOpen={tooltipOpen} target=\"btn\" toggle={toggleTooltipClose}>\r\n                            Close\r\n                        </Tooltip> */}\r\n                    </div>\r\n                    <ul style={{userSelect:\"none\"}} className=\"nav-list-section\">\r\n                        {/* <li>\r\n                            <i className='bx bx-search' onClick={maxNav} ></i>\r\n                            <input type=\"text\" placeholder=\"Search...\" />\r\n                            <span className=\"tooltip\">Dashboard</span>\r\n                        </li> */}\r\n                        <li>\r\n                            <NavLink datatarget=\"1\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/dashboard\">\r\n                                <i datatarget=\"1\" className=\"bx bx-grid-alt\"></i>\r\n                                <span datatarget=\"1\" className=\"links-name\">Dashboard</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Dashboard</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink datatarget=\"2\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/profile\">\r\n                                <i datatarget=\"2\" className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                                <span datatarget=\"2\" className=\"links-name\">Profile</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Profile</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink datatarget=\"5\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/dept\">\r\n                                <i datatarget=\"5\" className=\"far fa-address-card\"></i>\r\n                                <span datatarget=\"5\" className=\"links-name\">Departments</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Departments</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink datatarget=\"3\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/doctors\">\r\n                                <i datatarget=\"3\" className='fas fa-user-md'></i>\r\n                                <span datatarget=\"3\" className=\"links-name\">Doctors</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Doctors</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink datatarget=\"4\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/patients\">\r\n                                <i datatarget=\"4\" className=\"fab fa-accessible-icon\"></i>\r\n                                <span datatarget=\"4\" className=\"links-name\">Patients</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Patients</span>\r\n                        </li>\r\n                        {/* <li>\r\n                            <NavLink datatarget=\"6\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/blood-bank\">\r\n                                <i datatarget=\"6\" className='bx bxs-bank'></i>\r\n                                <span datatarget=\"6\" className=\"links-name\">Blood Bank</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Blood Bank</span>\r\n                        </li> */}\r\n                        <li>\r\n                            <NavLink datatarget=\"8\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/infra\">\r\n                                <i datatarget=\"8\" className=\"far fa-object-ungroup\"></i>\r\n                                <span datatarget=\"8\" className=\"links-name\">Infrastructure</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Infrastructure</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink datatarget=\"9\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/calendar\">\r\n                                <i datatarget=\"9\" className=\"far fa-calendar-alt\"></i>\r\n                                <span datatarget=\"9\" className=\"links-name\">Calendar</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Calendar</span>\r\n                        </li>\r\n                         <li>\r\n                            <NavLink datatarget=\"7\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/settings\">\r\n                                <i datatarget=\"7\" className='fas fa-cogs'></i>\r\n                                <span datatarget=\"7\" className=\"links-name\">Settings</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Settings</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink datatarget=\"10\" activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/help\">\r\n                                <i datatarget=\"10\" className='bx bxs-help-circle'></i>\r\n                                <span datatarget=\"10\" className=\"links-name\">Help</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Help</span>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"profile-content\">\r\n                        <div className=\"profile\">\r\n                            <div className=\"profile-details\">\r\n                                <img src={adminLogoPath} loading=\"lazy\" alt=\"\" />\r\n                                <div style={{textAlign:\"center\"}} className=\"name-job\"> \r\n                                    <div className=\"name\">Admin</div>\r\n                                    <div className=\"job\">{props.userid}</div>\r\n                                </div>                           \r\n                            </div>\r\n                            <i className=\"bx bx-log-out\" onClick={handleShow} id=\"log-out\"></i>\r\n                            {/* <Tooltip placement=\"right\" isOpen={tooltipOpen2} target=\"log-out\" toggle={toggleTooltipLogout}>\r\n                                Logout\r\n                            </Tooltip> */}\r\n                        </div>\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                            <Modal.Title>Confirm</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>Are You sure about to Logout of the Application ?</Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                No\r\n                            </Button>\r\n                            <Button variant=\"danger\" name=\"logout\" onClick={logout}>\r\n                                Yes! Logout\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-container\">\r\n                    {/* <h2 className=\"text\"> Future strong Memorial Hospital - 629200 </h2> */}\r\n                    <div className=\"content-admin\"> \r\n                        <Switch>\r\n                            {/* <Route exact path=\"/admin\" component={DefaultContent} /> */}\r\n                            <Route path=\"/admin/dashboard\" component={()=><DefaultContent hospitalid={props.hospitalid} />} />\r\n                            <Route path=\"/admin/profile\" component={()=><ProfileContent hospitalid={props.hospitalid} />} /> \r\n                            <Route path=\"/admin/doctors\" component={()=><DoctorContent hospitalid={props.hospitalid} />} /> \r\n                            <Route path=\"/admin/settings\" component={Working} /> \r\n                            <Route path=\"/admin/patients\" component={()=><PatientContent hospitalid={props.hospitalid} />} /> \r\n                            <Route path=\"/admin/help\" component={Working} /> \r\n                            <Route path=\"/admin/calendar\" component={Working} /> \r\n                            <Route path=\"/admin/infra\" component={Working} /> \r\n                            <Route path=\"/admin/blood-bank\" component={Working} /> \r\n                            <Route path=\"/admin/dept\" component={DepartmentContent} />\r\n                            <Route path=\"*\" component={()=><DefaultContent hospitalid={props.hospitalid} />} /> \r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/email.f01e9083.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory, Redirect } from 'react-router-dom'\r\nimport { Form, Container, Row, Col } from 'react-bootstrap'\r\nimport NavSection from './sections/admin/NavSection'\r\nimport './../../styles/app.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport emailImg from './../../images/email.jpg';\r\n\r\nlet HospitalAdminHomePage=()=>{\r\n\r\n    const history=useHistory()\r\n\r\n    const [ userID, setUserID ]=useState()\r\n    const [ hospitalID, setHospitalID ]=useState()\r\n    const [ logo,setLogo ]=useState(\"\")\r\n    const [ email,setEmail ]=useState(\"\")\r\n    const [ is_email_Verified, setIsEmailVerified ]=useState(false)\r\n    const [isLoading,setIsLoading]=useState(false);\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                if(!localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n                    window.location.href=\"/\"\r\n                }\r\n\r\n                if(localStorage.getItem('JAM_DISPLAY_CONTENT')!==\"Hospital\"){\r\n                    history.push('/')\r\n                }\r\n\r\n                let response=await fetch('/api/hospital-admin/',{\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    credentials:'include'\r\n                })\r\n                let content=await response.json()\r\n                let isErr=content.detail\r\n                if(isErr===\"Unauthenticated\"){\r\n                    logout();\r\n                }\r\n                else{\r\n                    setUserID(content.user_id)\r\n                    setLogo(content.logo)\r\n                    setHospitalID(content.hospital_id)\r\n                    setIsEmailVerified(content.is_email_Verified)\r\n                    setEmail(content.email)\r\n                    setIsLoading(true)\r\n                }\r\n            }\r\n        )()\r\n    })\r\n\r\n    let logout=async ()=>{\r\n        let response=await fetch('/api/hospital-logout/',{\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n        if(content.message==='success'){\r\n            localStorage.removeItem('JAM_DISPLAY_CONTENT')  \r\n            window.location.href='/'    \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"admin-page\">\r\n            { \r\n                isLoading ? is_email_Verified ? <NavSection adminLogo={logo} hospitalid={hospitalID} userid={userID}/> : <VerifyEmail mailVerify={is_email_Verified} email={email} /> : ''\r\n            }\r\n            {/* <Footer /> */}\r\n            {/* <h5>{userID ? 'Logged In' : 'Expired'}</h5> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nlet VerifyEmail=(props)=>{\r\n\r\n    const [ btnStatus, setBtnStatus ] = useState(\"Send Link\")\r\n    const [ headStatus, setHeadStatus ] = useState(\"Verify Your Email\")\r\n    const [ paraContent, setParaContent ] = useState(`We're excited to have you get started. First, you need to confirm whether the Provided \r\n                                                    Email account is belongs to you or not . To do so, Just click the button below to get \r\n                                                    the Verification Link.`)\r\n\r\n    let sendVerifyMail=async (event)=>{\r\n        event.preventDefault()\r\n\r\n        let email=props.email\r\n        let is_email_Verified=props.mailVerify\r\n\r\n        let response=await fetch(\"/api/email-verify/\",{\r\n            method:\"POST\",\r\n            headers:{'Content-Type':'application/json'},\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                email,is_email_Verified\r\n            })\r\n        })\r\n        let content=await response.json()\r\n        if(content){\r\n            setBtnStatus(\"Resend Mail\")\r\n            setHeadStatus(\"Email Sent Successfully\")\r\n            setParaContent(\"Check You Inbox to find the Verification Link\")\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className=\"email-verify-message-popup\" style={{height:\"100vh\",paddingTop:\"8%\"}}>\r\n            <Container>\r\n                <Row>                \r\n                    <Col className=\"col-md-6 col-md-offset-3\">\r\n                        { props.is_email_Verified ? '' :\r\n                            <Form onSubmit={sendVerifyMail} method=\"POST\">\r\n                                <Card className=\"form-email-sent-card animate__animated animate__zoomInDown\" style={{boxShadow:\"0 6px 14px rgba(0,0,0,0.2)\"}}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Email Verification\"\r\n                                        height=\"250\"\r\n                                        image={emailImg}\r\n                                        title=\"Email Verification\"\r\n                                        />\r\n                                        <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" className=\"text-center\" style={{fontFamily:\"'Kaushan Script', cursive\"}} component=\"h2\">\r\n                                            {headStatus}\r\n                                        </Typography>\r\n                                        <div style={{width:\"60%\",textAlign:\"center\",margin:\"auto\"}}>    \r\n                                            <Typography variant=\"body2\" className=\"para-email-admin\" style={{textAlign:\"center\",fontFamily:\"'Courgette',cursive\",fontSize:\"18px\",}} color=\"textSecondary\" component=\"p\">\r\n                                                {paraContent}\r\n                                            </Typography>\r\n                                        </div>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions className=\"d-flex justify-content-center\">\r\n                                        <Button type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                        ><i className=\"fa fa-send\"></i> &nbsp; {btnStatus}</Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Form>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HospitalAdminHomePage;","import React, { useEffect, useState } from 'react'\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport dateFormat from 'dateformat'\r\n\r\nlet Timeline = (props) => {\r\n\r\n    const [timeline,setTimeline]=useState([])\r\n    const [doctor,setDoctor]=useState(\"\")\r\n\r\n    const animateFromTo = (elem, direction) => {\r\n        const offset = 1000;\r\n        let x = 0;\r\n        let y = direction * offset;\r\n\r\n        direction = direction | 1;\r\n\r\n        if(elem.classList.contains(\"slide_from_left\")) {\r\n            x = -offset;\r\n            y = 0;\r\n        } \r\n        else if(elem.classList.contains(\"slide_from_right\")) {\r\n            x = offset;\r\n            y = 0;\r\n        }\r\n\r\n        gsap.fromTo(elem,{ \r\n                x: x, \r\n                y: y, \r\n                autoAlpha: 0 \r\n            },\r\n            {\r\n                duration: 1.25,\r\n                x: 0,\r\n                y: 0,\r\n                autoAlpha: 1,\r\n                ease: \"expo\",\r\n                overwrite: \"auto\",\r\n            }\r\n        );\r\n    };\r\n\r\n    const hide = (elem) => {\r\n        gsap.set(elem, { autoAlpha: 0 });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=>{\r\n          \r\n            gsap.registerPlugin(ScrollTrigger);\r\n\r\n            gsap.utils.toArray(\".animate\").forEach(function (elem) {\r\n                hide(elem);\r\n\r\n                ScrollTrigger.create({\r\n                    trigger: elem,\r\n                    onEnter: function () {\r\n                        animateFromTo(elem);\r\n                    },\r\n                    onEnterBack: function () {\r\n                        animateFromTo(elem, -1);\r\n                    },\r\n                    onLeave: function () {\r\n                        hide(elem);\r\n                    },\r\n                })\r\n            })\r\n        },500)\r\n        getHistoryInfo()\r\n\r\n    },[props.userid])\r\n\r\n    let getHistoryInfo=async()=>{\r\n        if(!localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n            window.location.href=\"/\"\r\n        }\r\n        else{\r\n            let response=await fetch(`/api/patient/patients-prescription-history/?aadhar_number=${props.userid}`,{\r\n                headers:{'Content-Type': 'application/json'}\r\n            })\r\n            let content=await response.json()\r\n            setTimeline(content)\r\n        }\r\n    }\r\n\r\n    let getDoctorName=(name)=>{\r\n\r\n        let doctorName=''\r\n\r\n        fetch(`/api/doctor/doctors-details/?doctor_id=${name}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setDoctor(data.name)\r\n        })\r\n        return doctor\r\n    }\r\n\r\n    return(\r\n        <div className=\"timeline\">\r\n            <ul>\r\n                {timeline.map((history, idx) => {\r\n                    return (\r\n                        <li key={`${history.id}_${history.entered_date}`}>\r\n                            <div className={`content animate ${idx % 2 === 0 ? \"slide_from_left\" : \"slide_from_right\"}`}>\r\n                                <h3\r\n                                    className={`animate ${\r\n                                    idx % 2 === 0 ? \"slide_from_left\" : \"slide_from_right\"\r\n                                    }`}\r\n                                >\r\n                                    {history.cause}\r\n                                </h3>\r\n                                <p\r\n                                    className={`animate ${\r\n                                    idx % 2 === 0 ? \"slide_from_left\" : \"slide_from_right\"\r\n                                    }`}\r\n                                >\r\n                                    {history.description}\r\n\r\n                                    <br /><span className=\"text-success\">Revisit Date : {history.revisit_date}</span>\r\n                                    <br /><span className=\"text-danger\">By <span style={{fontFamily:\"jokerman\"}}>Dr.{getDoctorName(history.doctor_id)}</span></span>\r\n                                </p>\r\n                            </div>\r\n                            <div\r\n                            className={`time animate ${\r\n                                idx % 2 === 0 ? \"slide_from_right\" : \"slide_from_left\"\r\n                            }`}\r\n                            >\r\n                            <h4>{dateFormat(history.entered_date, \"mmmm dS, yyyy\")}</h4>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n                <div style={{ clear: \"both\" }}></div>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Timeline\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route, BrowserRouter, Link, NavLink, Switch } from 'react-router-dom'\r\nimport { Button, Modal, ModalHeader, Row, Col, ModalBody, ModalFooter } from 'react-bootstrap'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Timeline from './Timeline'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport './../../../../styles/patient.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: theme.palette.common.white,\r\n        '&:hover': {\r\n        backgroundColor: theme.palette.common.white,\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n\r\n    const { children, window } = props;\r\n    const classes = useStyles2();\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n        <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n            {children}\r\n        </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    window: PropTypes.func,\r\n};\r\n\r\nlet NavSection=(props)=>{\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () =>  setShow(true);\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={menuId}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={handleMenuClose}\r\n        >\r\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n        anchorEl={mobileMoreAnchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        id={mobileMenuId}\r\n        keepMounted\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMobileMenuOpen}\r\n        onClose={handleMobileMenuClose}\r\n        >\r\n        <MenuItem>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n            </Badge>\r\n            </IconButton>\r\n            <p>Messages</p>\r\n        </MenuItem>\r\n        <MenuItem>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n            <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n            </Badge>\r\n            </IconButton>\r\n            <p>Notifications</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleProfileMenuOpen}>\r\n            <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"primary-search-account-menu\"\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n            >\r\n            <AccountCircle />\r\n            </IconButton>\r\n            <p>Profile</p>\r\n        </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    let logout=async ()=>{\r\n        let response=await fetch('/api/patient/logout/',{\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n        if(content.message==='success'){\r\n            localStorage.removeItem('JAM_DISPLAY_CONTENT')  \r\n            window.location.href='/'    \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"patient-home-container\">\r\n            <CssBaseline />\r\n            <AppBar style={{background:\"linear-gradient(315deg, #06bcfb 0%, #4884ee 74%)\"}}>\r\n                <Toolbar>\r\n                <Typography variant=\"h6\"></Typography>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    {props.name}\r\n                </Typography>\r\n                <div className={classes.grow} />\r\n                <div className={classes.sectionDesktop}>\r\n                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={17} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                    </IconButton>\r\n                    <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                    >\r\n                    <AccountCircle />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.sectionMobile}>\r\n                    <IconButton\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                    >\r\n                    <MoreIcon />\r\n                    </IconButton>\r\n                </div> &nbsp; &nbsp; &nbsp;\r\n                <Button style={{background:\"red\",fontSize:\"16px\",textTransform:\"capitalize\",borderRadius:\"10px\"}} onClick={handleShow}><i className=\"bx bx-log-out\" id=\"log-out\"></i> Logout</Button>\r\n                <Modal show={show} onHide={handleClose} centered>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are You sure about to Logout of the Application ?</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        No\r\n                    </Button>\r\n                    <Button variant=\"danger\" name=\"logout\" onClick={logout}>\r\n                        Yes! Logout\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                </Toolbar>\r\n            </AppBar>    \r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            <Toolbar id=\"back-to-top-anchor\" />\r\n            <Container className=\"patients-timeline\"><br /><br />\r\n                <h3 className=\"text-center text-success\">Medical history</h3>\r\n                <Box my={2}>\r\n                {/* {[...new Array(40)]\r\n                    .map(\r\n                    () => `Cras mattis consectetur purus sit amet fermentum.\r\n                        Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n                        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n                    )\r\n                    .join('\\n')} */}\r\n                    <Timeline userid={props.userid} />\r\n                </Box>\r\n            </Container>\r\n            <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </ScrollTop>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavSection\r\n","import React, { useEffect, useState } from 'react';\r\nimport NavSection from './sections/patient/NavSection'\r\n\r\nlet PatientHomePage=()=>{\r\n\r\n    const [ userID, setUserID ]=useState()\r\n    const [ hospitalID, setHospitalID ]=useState()\r\n    const [ logo,setLogo ]=useState(\"\")\r\n    const [ name,setName ]=useState(\"\")\r\n    const [ email,setEmail ]=useState(\"\")\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                if(!localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n                    window.location.href=\"/\"\r\n                }\r\n                let response=await fetch('/api/patient/patient-login-verify/',{\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    credentials:'include'\r\n                })\r\n                let content=await response.json()\r\n                // console.log(content)\r\n                let isErr=content.detail\r\n                if(isErr===\"Unauthenticated\"){\r\n                    logout();\r\n                }\r\n                else{\r\n                    setUserID(content.aadhar_number)\r\n                    setLogo(content.logo)\r\n                    setHospitalID(content.account_created_hospital_id)\r\n                    setEmail(content.email)\r\n                    setName(content.patient_name)\r\n                }\r\n            }\r\n        )()\r\n    })\r\n\r\n    let logout=async ()=>{\r\n        let response=await fetch('/api/patient/logout/',{\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n        if(content.message==='success'){\r\n            localStorage.removeItem('JAM_DISPLAY_CONTENT')  \r\n            window.location.href='/'    \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"patient-page\">\r\n            {\r\n                <NavSection userlogo={logo} hospitalid={hospitalID} userid={userID} name={name} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientHomePage;","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function DoctorsList(props) {\r\n\r\n    const [doctorsList,setDoctorsList]=useState([])\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                let response=await fetch('/api/doctor/doctors-lists/',{\r\n                    headers:{'Content-Type': 'application/json'}\r\n                })\r\n                let content=await response.json()\r\n                setDoctorsList(content)\r\n            }\r\n        )()\r\n    },[])\r\n\r\n    let redirectURL=(event)=>{\r\n        console.log(event.target.getAttribute('data-target'))\r\n        // window.location.href=\"/\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"doctors-list-grid-content\">\r\n            <div className=\"container-card\">\r\n                <div className=\"heading\">Doctors</div>\r\n                <div className=\"cards-wrapper\">\r\n                    {\r\n                        doctorsList.map((doctor)=>(\r\n                            <div className=\"card\" key={doctor.id}>\r\n                                <img src=\"https://images.unsplash.com/photo-1551554781-c46200ea959d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\" alt=\"top1\" className=\"image-top\" />\r\n                                <img src={\"\" + doctor.logo} alt=\"image1\" className=\"profile-image\" />\r\n                                <h1 className=\"fullname\">{doctor.name}</h1>\r\n                                <h3 className=\"job\">{doctor.dept}</h3>\r\n                                <p className=\"about-me\">\r\n                                    {/* {doctorHospitalDetails.hospital_name}<br/>\r\n                                    {doctorHospitalDetails.branch},<br />\r\n                                    {doctorHospitalDetails.pincode} */}\r\n\r\n                                    {/* {getLists(doctor.hospital_id)} */}\r\n\r\n                                    <DoctorHospitalDetails hospitalid={doctor.hospital_id} />\r\n                                </p>\r\n                                <a className=\"mobile-btn\" href={\"tel:\"+doctor.mobile_no}><i className=\"fas fa-phone-volume\"></i> Contact me</a>\r\n                                <ul className=\"social-icons\">\r\n                                    { \r\n                                        doctor.fb_url!==\"\" ? \r\n                                        <li>\r\n                                            <p onClick={redirectURL}><i data-target={doctor.fb_url} className=\"fab fa-facebook-f\"></i></p>\r\n                                        </li> : ''\r\n                                    }\r\n                                    {\r\n                                        doctor.tweet_url!==\"\" ?\r\n                                        <li>\r\n                                            <p onClick={redirectURL}><i data-target={doctor.tweet_url} className=\"fab fa-twitter\"></i></p>\r\n                                        </li> : ''\r\n                                    }\r\n                                    {\r\n                                        doctor.insta_url!==\"\" ?\r\n                                        <li>\r\n                                            <p onClick={redirectURL}><i data-target={doctor.insta_url} className=\"fab fa-instagram\"></i></p>\r\n                                        </li> : ''\r\n                                    }\r\n                                    <li title=\"email\">\r\n                                        <a href={\"mailto:\"+doctor.email}><i className=\"far fa-envelope-open\"></i></a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>     \r\n                        ))\r\n                    }             \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet DoctorHospitalDetails=(props)=>{\r\n\r\n    const [hospitalDetails, setHospitalDetails]=useState([])\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{    \r\n                let response=await fetch(`/api/hospital-details/?hospital_id=${props.hospitalid}`)\r\n                let content=await response.json()\r\n                setHospitalDetails(content)\r\n            }\r\n        )()\r\n    },[])\r\n\r\n    return (\r\n        <p>\r\n            {hospitalDetails.hospital_name} ,\r\n            {hospitalDetails.branch} ,<br />\r\n            {hospitalDetails.pincode} <br />\r\n\r\n            <b>Email</b> : {hospitalDetails.email}\r\n        </p>\r\n    )\r\n}","import React from 'react';\r\n\r\nfunction AddInfo({open,children}) \r\n{\r\n    if(!open) return null;\r\n\r\n    return(\r\n        <div className=\"patient-info\" style={{width:\"80%\",margin:\"auto\"}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInfo","import React, { Component, useEffect, useState } from 'react'\r\nimport { Container, Button, Form, Badge, InputGroup, Row, Col, Spinner, Popover, OverlayTrigger } from 'react-bootstrap'\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from 'draft-js'\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nfunction GrowTransition(props) {\r\n  return <Grow {...props} />;\r\n}\r\n\r\nclass AddPrescriptionDetails extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.savePrescriptionDetails=this.savePrescriptionDetails.bind(this);\r\n        this.collectData=this.collectData.bind(this);\r\n    }\r\n\r\n    state={\r\n        hospital_id:this.props.hospitalid,\r\n        aadhar_number:this.props.aadharnumber,\r\n        doctor_id:this.props.appid,\r\n        symptoms:\"\",\r\n        cause:\"\",\r\n        revisit_date:\"\",\r\n        valid:false,\r\n        description:'',\r\n        editorState:EditorState.createEmpty(),\r\n        open:false,\r\n        Transition:Fade\r\n    };\r\n\r\n    onEditorStateChange=(editorState)=>{\r\n        this.setState({\r\n            editorState:editorState,\r\n        })\r\n\r\n        this.setState({\r\n            description:JSON.stringify(convertToRaw(editorState.getCurrentContent())),\r\n        })\r\n        //console.log(convertToRaw(editorState.getCurrentContent()))\r\n        // console.log()\r\n    }\r\n\r\n    savePrescriptionDetails=async (e)=>{\r\n        e.preventDefault()\r\n\r\n        let response=await fetch(\"/api/patient/patients-prescription/\",{\r\n            headers:{'Content-Type':'application/json'},\r\n            method:\"POST\",\r\n            body:JSON.stringify(this.state)\r\n        })\r\n        let content=await response.json()\r\n        if(content.message===\"Prescription Added successfully\"){\r\n            document.querySelector('.update-info-snack-btn').click() \r\n            this.props.getHistory(\"props\")\r\n        }\r\n        // console.log(content)\r\n        // console.log(this.state.editorState)\r\n        // console.log(convertToRaw(this.state.editorState.getCurrentContent()))\r\n    } \r\n\r\n    handleClick = (Transition) => () => {\r\n        this.setState({\r\n            open: true,\r\n            Transition,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n        });\r\n    };\r\n\r\n    collectData=(event)=>{\r\n\r\n        const {name,value}=event.target;\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n\r\n        if(document.querySelector('.cause-reason').value!=='' && document.querySelector('.symptoms').value!==''){\r\n            this.setState({valid:true})\r\n        }\r\n        else{\r\n            this.setState({valid:false})\r\n        }\r\n        // console.log(event.target.value)\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state.description.getCurrentContent())\r\n        // let pre=this.state.description\r\n        // this.setState({\r\n        //     description:pre.getCurrentContent()\r\n        // })\r\n        // console.log(convertToRaw(this.state.description.getCurrentContent()))\r\n        return(\r\n            <div className=\"text-editor\">\r\n               <Form style={{padding:\"20px\"}} onSubmit={this.savePrescriptionDetails}>\r\n                    <Form.Group>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <label htmlFor=\"cause\" style={{cursor:\"pointer\"}}>\r\n                                    <InputGroup.Text style={{height:\"45px\"}}><i className=\"fas fa-capsules\"></i></InputGroup.Text>\r\n                                </label>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control style={{height:\"45px\"}} placeholder=\"Enter the Reason\" name=\"cause\" onChange={this.collectData} onKeyUp={this.collectData} value={this.state.cause} id=\"cause\" type=\"text\" className=\"cause-reason\" required /> {/*isInvalid*/} \r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please Enter a valid email.\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group><br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <InputGroup hasValidation>\r\n                                    <InputGroup.Prepend>\r\n                                        <label htmlFor=\"symptoms\" style={{cursor:\"pointer\"}}>\r\n                                            <InputGroup.Text style={{height:\"45px\"}}><i className=\"fas fa-diagnoses\"></i></InputGroup.Text>\r\n                                        </label>\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control style={{height:\"45px\"}} placeholder=\"Enter the Symptoms\" name=\"symptoms\" onChange={this.collectData} onKeyUp={this.collectData} value={this.state.symptoms} id=\"symptoms\" type=\"text\" className=\"symptoms\" required /> {/*isInvalid*/} \r\n                                    <Form.Control.Feedback style={{padding:\"5px 0\"}} type=\"invalid\">\r\n                                        \r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <InputGroup hasValidation>\r\n                                    <InputGroup.Prepend>\r\n                                        <label htmlFor=\"revisit\" style={{cursor:\"pointer\"}}>\r\n                                            <InputGroup.Text style={{height:\"45px\"}}><ScheduleIcon /></InputGroup.Text>\r\n                                        </label>\r\n                                    </InputGroup.Prepend>\r\n                                    <Form.Control style={{height:\"45px\"}} placeholder=\"Revisit Date\" name=\"revisit_date\" onChange={this.collectData} onKeyUp={this.collectData} value={this.state.revisit_date} type=\"date\" id=\"revisit\" className=\"revisit form-control\" required /> {/*isInvalid*/} \r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Please Enter a valid email.\r\n                                    </Form.Control.Feedback> \r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row><br />                   \r\n                    <Row>\r\n                        <Col>\r\n                            {/* <Editor\r\n                                editorState={this.state.editorState}\r\n                                toolbarClassName=\"toolbarClassName\"\r\n                                wrapperClassName=\"wrapperClassName\"\r\n                                editorClassName=\"editorClassName\"\r\n                                onEditorStateChange={this.onEditorStateChange}\r\n                            />; */}\r\n                            <div className=\"mb-3\">\r\n                                <textarea value={this.state.description} className=\"form-control\" name=\"description\" placeholder=\"Prescription\" onChange={this.collectData} onKeyUp={this.collectData} rows=\"6\" required></textarea>\r\n                            </div>\r\n                        </Col>\r\n                    </Row><br />\r\n                    <Row>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            { this.state.valid ?  <LoadingButton/> : <Button type=\"button\" disabled varint=\"primary\">Save</Button> }                           \r\n                            <Button style={{display:\"none\"}} className=\"update-info-snack-btn\" onClick={this.handleClick(SlideTransition)}>Slide Transition</Button>\r\n                            <Snackbar\r\n                                open={this.state.open}\r\n                                onClose={this.handleClose}\r\n                                TransitionComponent={this.state.Transition}\r\n                                message=\"Prescription Saved Successfully\"\r\n                                key={this.state.Transition.name}\r\n                            />\r\n                        </div>  \r\n                    </Row> \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true);\r\n        e.target.click()\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title className=\"text-center\" as=\"h3\">Are You Sure ?</Popover.Title>\r\n            <Popover.Content>\r\n                Check the Provided Details <strong>Once again</strong> before clicking this button\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    return (\r\n        <OverlayTrigger trigger={[\"hover\", \"hover\"]} placement=\"top\" overlay={popover}>\r\n            <Button size=\"lg\" variant=\"primary\" type=\"submit\" disabled={isLoading} onClick={!isLoading ? handleClick : null}>\r\n                {isLoading ? <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"lg\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                /> : 'Save'}\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\nexport default AddPrescriptionDetails\r\n","import React, { useEffect, useState, useRef, Component } from 'react'\r\nimport AddInfo from './AddInfo'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { Container, Button, Form, Badge, InputGroup, Row, Col, Spinner, Popover, OverlayTrigger } from 'react-bootstrap'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport dateFormat from 'dateformat'\r\nimport Scroll from 'react-scroll'\r\nimport { scrollToTop } from 'react-scroll/modules/mixins/animate-scroll'\r\nimport { uniqId } from './../../../Unique.js'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport { Editor } from \"react-draft-wysiwyg\"\r\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js'\r\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\r\nimport AddPrescriptionDetails from './AddPrescriptionDetails'\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport draftToMarkdown from 'draftjs-to-markdown';\r\n\r\nvar Link = Scroll.Link;\r\nvar DirectLink = Scroll.DirectLink;\r\nvar Element = Scroll.Element;\r\nvar Events = Scroll.Events;\r\nvar scroll = Scroll.animateScroll;\r\nvar scrollSpy = Scroll.scrollSpy;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n}))\r\n\r\nconst linkStyle = {\r\n  color: 'white',\r\n  textTransform:\"Capitalize\",\r\n  fontSize:\"1.1em\",\r\n  cursor:\"pointer\",\r\n};\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 405,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function Patient(props) {\r\n\r\n    const classes = useStyles();\r\n    const classes1 = useStyles2();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const [patientData, setPatientData]=useState([])\r\n    const [patientID, setPatientID]=useState(\"\")\r\n    const [currentPatientInfo, setCurrentPatientInfo]=useState([])\r\n    const [historyInfo, setHistoryInfo]=useState([])\r\n    const [isModalOpen,setIsModalOpen]=useState(false)\r\n    const [isTodoViewOpen,setIsTodoViewOpen]=useState(false)\r\n    const [refresh,setRefresh]=useState(false)\r\n    let count=0\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                let response=await fetch('/api/patient/patients-lists/',{\r\n                    headers:{'Content-Type': 'application/json'}\r\n                })\r\n                let content=await response.json()\r\n                setPatientData(content)\r\n                \r\n                // console.log(patientData)\r\n            }\r\n        )()\r\n    },[])\r\n\r\n    const options = patientData.map((option) => {\r\n        const firstLetter = option.aadhar_number[0].toUpperCase();\r\n        return {\r\n            firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n            ...option,\r\n        }\r\n    })\r\n\r\n    let getPatientsData=async(value)=>{\r\n        if(value!==null && value!==\"props\"){\r\n            setPatientID(value.aadhar_number)\r\n            setCurrentPatientInfo(value)\r\n        }\r\n        else if(value===\"props\"){\r\n            setPatientID(patientID)\r\n            setCurrentPatientInfo(currentPatientInfo)\r\n        }\r\n        else{\r\n            setPatientID(\"\")\r\n            setCurrentPatientInfo(\"\")\r\n        }\r\n\r\n        let response=await fetch(`/api/patient/patients-prescription-history/?aadhar_number=${patientID}`,{\r\n            headers:{'Content-Type': 'application/json'}\r\n        })\r\n        let content=await response.json()\r\n\r\n        // console.log(convertToRaw(this.state.editorState.getCurrentContent()))\r\n        // console.log(content[0].description.getCurrentContent())\r\n        setHistoryInfo(content)\r\n\r\n    }\r\n\r\n    const scrollToBottom=()=>{\r\n        window.scrollTo({\r\n            top:document.documentElement.scrollHeight,\r\n            behavior:\"smooth\"\r\n        })\r\n        getPatientsData(\"props\")\r\n        document.querySelector('.patient-doctor-history').style.display=\"block\"\r\n    }\r\n\r\n    const scrollToBottomAdd=()=>{        \r\n        setIsModalOpen(true)\r\n        if(isModalOpen){\r\n            window.scrollTo({\r\n                top:document.documentElement.scrollHeight,\r\n                behavior:\"smooth\"\r\n            })     \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-content\">\r\n            <Autocomplete\r\n                id=\"grouped-demo\"\r\n                options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\r\n                groupBy={(option) => option.firstLetter}\r\n                getOptionLabel={(option) => option.aadhar_number}\r\n                getOptionSelected={(option, value) => option.aadhar_number === value.aadhar_number }\r\n                onChange={(event, newValue) => {\r\n                    getPatientsData(newValue);\r\n                }}\r\n                style={{ width: \"60%\", margin:\"auto\" }}\r\n                renderInput={(params) => <TextField {...params} placeholder=\"Find Patients using their ID\" variant=\"outlined\" />}\r\n            />\r\n            <div className=\"patient-details-content\">\r\n                <div className=\"patients-history-edit-details\">\r\n                    {\r\n                        patientID!==\"\" ? \r\n                            <div className=\"content-info\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"content\">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"firstinfo\">\r\n                                                <img alt=\"\" src={\"\"+currentPatientInfo.logo} />\r\n                                                <div className=\"profileinfo\">\r\n                                                    <h1>{currentPatientInfo.patient_name}</h1>\r\n                                                    <h6>{currentPatientInfo.aadhar_number}</h6>\r\n                                                    <h5>DOB : {currentPatientInfo.date_of_birth}</h5>                                                \r\n                                                    <h3>{currentPatientInfo.email}</h3>\r\n                                                    <h3>{currentPatientInfo.mobile_no}</h3>\r\n                                                    <p className=\"bio\">\r\n                                                        {currentPatientInfo.email_verified.toString()===\"true\" ? <span className=\"p-2 badge bg-success text-light\" >Email Verified</span> : <span className=\"p-2 badge bg-warning text-dark\">Email Not Verified</span>} &nbsp; \r\n                                                        {currentPatientInfo.mobile_verified.toString()===\"true\" ? <span className=\"p-2 badge bg-success text-light\" >Mobile Verified</span> : <span className=\"p-2 badge bg-warning text-dark\">Mobile Not Verified</span>}\r\n                                                    </p>\r\n                                                    <center>\r\n                                                        <Link activeClass=\"active\" to=\"addInsideContainer\" onClick={scrollToBottomAdd} variant=\"primary\" className=\"clickScroll btn btn-primary\" style={linkStyle} smooth={true} duration={5000} containerId=\"containerElement\">Add</Link> &nbsp; &nbsp;\r\n                                                        <Link activeClass=\"active\" onClick={scrollToBottom} variant=\"primary\" to=\"secondInsideContainer\" className=\"clickScroll btn btn-primary\" style={linkStyle} smooth={true} duration={5000} containerId=\"containerElement\">View</Link>\r\n                                                    </center>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div><br /><br />\r\n                                <section>\r\n                                    <AddInfo open={isModalOpen}> \r\n                                        <button style={{border:\"none\",background:\"transparent\",float:\"right\",fontSize:\"20px\"}} onClick={()=>{document.querySelector('.patient-info').classList.add('patient-info-hide');setTimeout(()=>{document.querySelector('.patient-info').classList.remove('patient-info-hide');setIsModalOpen(false)},200)}}><i className=\"fas fa-times\"></i></button>\r\n                                            <div className=\"add-patient-info\">\r\n                                                <h4 style={{textAlign:\"Center\",lineHeight:\"60px\"}} className=\"hospital-register-header\">Add Prescription Details</h4>  \r\n                                                <Container>\r\n                                                    <AddPrescriptionDetails hospitalid={props.hospitalid} getHistory={getPatientsData} appid={props.appid} aadharnumber={currentPatientInfo.aadhar_number} />\r\n                                                </Container> \r\n                                            </div>\r\n                                    </AddInfo>\r\n                                </section>\r\n                                <Element name=\"addInsideContainer\">\r\n                                </Element>\r\n                                <section>\r\n                                    <Element name=\"test7\" className=\"element live-updates-section patient-doctor-history\" id=\"containerElement\" style={{overflow:\"hidden\", width:\"80%\", display:\"none\", position: 'relative',margin:\"20px auto\",paddingTop:\"-20px\",height: '100%'}} >\r\n                                        <div className=\"patient-history-content\">\r\n                                            <div className={classes1.root}>\r\n                                                {\r\n                                                    historyInfo.slice(0).reverse().map((history)=>(\r\n                                                        // {count=count+1}\r\n                                                        <Accordion key={history.id} expanded={expanded === `panel${count=count+1}`} onChange={handleChange(`panel${count}`)}>\r\n                                                            <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\r\n                                                                <Typography style={{color:\"black\"}} className={classes1.heading}>{dateFormat(history.entered_date, \"mmmm dS, yyyy\")}</Typography>\r\n                                                                <Typography style={{color:\"black\"}} className={classes1.secondaryHeading}>{history.cause}</Typography>\r\n                                                            </AccordionSummary>\r\n                                                            <AccordionDetails>\r\n                                                                <Typography>\r\n                                                                    {/* <GetHistoryInfo desc={history.description} /> */}\r\n                                                                    {history.description}\r\n                                                                    {/* <textarea value={draftToHtml(convertToRaw(prescription.getCurrentContext()))} className=\"form-control\" name=\"description\" placeholder=\"Prescription\" rows=\"6\"></textarea> */}\r\n                                                                </Typography>\r\n                                                            </AccordionDetails>\r\n                                                        </Accordion>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <Element name=\"secondInsideContainer\">\r\n                                        </Element>\r\n                                    </Element>\r\n                                </section>\r\n                            </div>\r\n                        : ''\r\n                    }        \r\n                                                            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n/* import Profile from './Profile'\r\nimport Settings from './Settings'\r\nimport BloodBank from'./BloodBank'*/\r\nimport DoctorsList from'./DoctorsList'\r\nimport Patient from'./Patient'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}))\r\n\r\nlet DefaultContent=()=>{\r\n    const [ verifyStatus, setVerifyStatus ]=useState(\"\")\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const status = queryParams.get('status');\r\n        setVerifyStatus(status)\r\n        setTimeout(()=>{\r\n            setVerifyStatus(\"\")\r\n        },10000)\r\n    },[])\r\n\r\n    return(\r\n        <div className={classes.root} >\r\n            {\r\n                verifyStatus===\"success\" ?\r\n                    <Alert className=\"email-success-alert animate__animated\" variant=\"filled\" severity=\"success\">\r\n                        Email Verified and Account Activated Successfully\r\n                    </Alert>\r\n                : ''\r\n            }\r\n            <div className=\"default-content\">\r\n                <h1>Default Content</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/* let ProfileContent=(props)=>{\r\n    useEffect(()=>{\r\n        // document.querySelector('.main-container').style.background=\"linear-gradient(-20deg, #7f2de6 0%, #03f6d9 100%)\";  \r\n    },[])\r\n    return(\r\n        <div className=\"profile-content\">\r\n            <Profile hospitalid={props.hospitalid} />\r\n        </div>\r\n    )\r\n}*/\r\n\r\nlet DoctorContent=(props)=>{\r\n    return( \r\n        <div className=\"doctor-content\">\r\n            <DoctorsList hospitalid={props.hospitalid} appid={props.appid} />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet PatientContent=(props)=>{\r\n  /*   useEffect(()=>{\r\n        document.querySelector('body').style.overflow=\"hidden\"\r\n    }) */\r\n    return( \r\n        <div className=\"patient-content\">\r\n            <Patient hospitalid={props.hospitalid} appid={props.appid} />\r\n        </div>\r\n    )\r\n}\r\n/*\r\nlet SettingsContent=()=>{\r\n    return(\r\n        <div className=\"settings-content\">\r\n            <Settings />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet DepartmentContent=()=>{\r\n    return( \r\n        <div className=\"bloodbank-content\">\r\n            <Department />\r\n        </div>\r\n    )\r\n}\r\n\r\nlet BloodBankContent=()=>{\r\n    return( \r\n        <div className=\"bloodbank-content\">\r\n            <BloodBank />\r\n        </div>\r\n    )\r\n} */\r\n\r\nlet Footer=()=>{\r\n    return(\r\n        <footer>\r\n            <h4>footer</h4>\r\n        </footer>\r\n    );\r\n}\r\n\r\nlet NotFound=()=>{\r\n    return(\r\n        <div>\r\n            <h1>Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { DefaultContent, PatientContent, DoctorContent, Footer, NotFound }","export default __webpack_public_path__ + \"static/media/verify.91a15292.jpg\";","import React,{ useEffect, useState } from 'react'\r\nimport { Route, BrowserRouter, Link, NavLink, Switch } from 'react-router-dom'\r\nimport { Button, Modal, ModalHeader, Row, Col, ModalBody, ModalFooter } from 'react-bootstrap'\r\nimport { DefaultContent, PatientContent, DoctorContent, Footer, NotFound } from './Doctor'\r\nimport img from './../../../../images/verify.jpg'\r\n\r\nexport default function NavSection() {\r\n\r\n    const [ isSuccess, setIsSuccess ]=useState(false)  \r\n    const [ userID, setUserID ]=useState()\r\n    const [ hospitalID, setHospitalID ]=useState()\r\n    const [ logo,setLogo ]=useState(\"\")\r\n    const [name,setName]=useState(\"\")\r\n    const [ email,setEmail ]=useState(\"\")\r\n    const [ is_email_Verified, setIsEmailVerified ]=useState(false)\r\n    const [isLoading,setIsLoading]=useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () =>  setShow(true);\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                if(!localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n                    window.location.href=\"/\"\r\n                }\r\n                let response=await fetch('/api/doctor/profile/',{\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    credentials:'include'\r\n                })\r\n                let content=await response.json()\r\n                // console.log(content)\r\n                let isErr=content.detail\r\n                if(isErr===\"Unauthenticated\"){\r\n                    logout();\r\n                }\r\n                else{\r\n                    setUserID(content.app_id)\r\n                    setLogo(\"\"+content.logo)\r\n                    setHospitalID(content.hospital_id)\r\n                    setIsEmailVerified(content.email_Verified)\r\n                    setEmail(content.email)\r\n                    setName(content.name)\r\n                    setIsLoading(true)\r\n                    // console.log(logo)\r\n                }\r\n            }\r\n        )()\r\n    })\r\n\r\n    let logout=async ()=>{\r\n        handleClose()\r\n        let response=await fetch('/api/doctor/logout/',{\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n        if(content.message==='success'){\r\n            localStorage.removeItem('JAM_DISPLAY_CONTENT')  \r\n            window.location.href='/'    \r\n            setIsSuccess(true)\r\n        }\r\n    }\r\n\r\n    let maxNav=()=>{\r\n        let sideNavBar=document.querySelector(\".sidebar-nav-main\")\r\n        sideNavBar.classList.toggle('active-nav')\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"doctor-container\">\r\n                <div className=\"sidebar-nav-main\">\r\n                    <div className=\"logo-content\">\r\n                        <div className=\"logo\" style={{userSelect:\"none\", textAlign: 'center'}} >\r\n                            <img src={logo} style={{cursor:\"pointer\"}} className=\"doctor-profile-img\" alt=\"\" />\r\n                            <div className=\"logo-name\"><span>Dr.</span> {name}</div> \r\n                        </div>\r\n                        <i className=\"bx bx-menu\" onClick={maxNav} style={{fontSize:\"35px\"}} id=\"btn\"></i>\r\n                    </div>\r\n                    <hr style={{border:\"2px solid white\"}} />\r\n                    <ul style={{userSelect:\"none\"}} className=\"nav-list-section\">\r\n                        <li>\r\n                            <NavLink activeClassName=\"active-admin-link\" className=\"alink\" to=\"/doctor/dashboard\">\r\n                                <i className=\"bx bx-grid-alt\"></i>\r\n                                <span className=\"links-name\">Dashboard</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Dashboard</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active-admin-link\" className=\"alink\" to=\"/doctor/patients\">\r\n                                <i className=\"fab fa-accessible-icon\"></i>\r\n                                <span className=\"links-name\">Patients</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Patients</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active-admin-link\" className=\"alink\" to=\"/doctor/lists\">\r\n                                <i className='fas fa-user-md'></i>\r\n                                <span className=\"links-name\">Doctors</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Doctors</span>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/calendar\">\r\n                                <i className=\"far fa-calendar-alt\"></i>\r\n                                <span className=\"links-name\">Calendar</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Calendar</span>\r\n                        </li>\r\n                         <li>\r\n                            <NavLink activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/settings\">\r\n                                <i className='fas fa-cogs'></i>\r\n                                <span className=\"links-name\">Settings</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Settings</span>\r\n                        </li>\r\n                      {/*   <li>\r\n                            <NavLink activeClassName=\"active-admin-link\" className=\"alink\" to=\"/admin/help\">\r\n                                <i className='bx bxs-help-circle'></i>\r\n                                <span className=\"links-name\">Help</span>\r\n                            </NavLink>\r\n                            <span className=\"tooltip\">Help</span>\r\n                        </li> */}\r\n                        <li>\r\n                            <Link onClick={handleShow} className=\"alink\" to=\"/admin/help\">\r\n                                <i className=\"bx bx-log-out\" id=\"log-out\"></i>\r\n                                <span className=\"links-name\">Logout</span>\r\n                            </Link>\r\n                            <Modal show={show} onHide={handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                <Modal.Title>Confirm</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>Are You sure about to Logout of the Application ?</Modal.Body>\r\n                                <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                    No\r\n                                </Button>\r\n                                <Button variant=\"danger\" name=\"logout\" onClick={logout}>\r\n                                    Yes! Logout\r\n                                </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"main-container\">\r\n                    <div className=\"content-admin my-3\" > \r\n                        <Switch>\r\n                            <Route exact path=\"/doctor\" component={()=><PatientContent appid={userID} hospitalid={hospitalID} />} />\r\n                            <Route path=\"/doctor/dashboard\" component={()=><PatientContent appid={userID} hospitalid={hospitalID} />} />\r\n                            {/* <Route path=\"/admin/profile\" component={()=><ProfileContent hospitalid={props.hospitalid} />} /> \r\n                            <Route path=\"/admin/doctors\" component={()=><DoctorContent hospitalid={props.hospitalid} />} /> \r\n                            <Route path=\"/admin/settings\" component={SettingsContent} /> */}\r\n                            <Route path=\"/doctor/patients\" component={()=><PatientContent appid={userID} hospitalid={hospitalID} />} /> \r\n                            <Route path=\"/doctor/lists\" component={()=><DoctorContent appid={userID} hospitalid={hospitalID} />} /> \r\n                            {/*<Route path=\"/admin/help\" component={ProfileContent} /> \r\n                            <Route path=\"/admin/calendar\" component={ProfileContent} /> \r\n                            <Route path=\"/admin/infra\" component={ProfileContent} /> \r\n                            <Route path=\"/admin/blood-bank\" component={BloodBankContent} /> \r\n                            <Route path=\"/admin/dept\" component={DepartmentContent} /> \r\n                            <Route path=\"*\" component={DefaultContent} />  */}\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, BrowserRouter, Link, NavLink, Switch } from 'react-router-dom'\r\nimport { Form, Container, Row, Col, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'react-bootstrap'\r\nimport NavSection from './sections/doctor/NavSection'\r\nimport './../../styles/app.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n// import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport emailImg from './../../images/verify.jpg';\r\n\r\nlet DoctorHomePage=()=>{\r\n\r\n    const [ userID, setUserID ]=useState()\r\n    const [ hospitalID, setHospitalID ]=useState()\r\n    const [ logo,setLogo ]=useState(\"\")\r\n    const [ email,setEmail ]=useState(\"\")\r\n    const [ is_email_Verified, setIsEmailVerified ]=useState(false)\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () =>  setShow(true);\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                if(!localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n                    window.location.href=\"/\"\r\n                }\r\n                let response=await fetch('/api/doctor/profile/',{\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    credentials:'include'\r\n                })\r\n                let content=await response.json()\r\n                // console.log(content)\r\n                let isErr=content.detail\r\n                if(isErr===\"Unauthenticated\"){\r\n                    logout();\r\n                }\r\n                else{\r\n                    setUserID(content.app_id)\r\n                    setLogo(content.logo)\r\n                    setHospitalID(content.hospital_id)\r\n                    setIsEmailVerified(content.email_Verified)\r\n                    setEmail(content.email)\r\n                    setIsLoading(true)\r\n                }\r\n            }\r\n        )()\r\n    })\r\n\r\n    let logout=async ()=>{\r\n        let response=await fetch('/api/doctor/logout/',{\r\n            method:\"POST\",\r\n            headers:{'Content-Type': 'application/json'},\r\n            credentials:'include'\r\n        })\r\n\r\n        let content=await response.json()\r\n        if(content.message==='success'){\r\n            localStorage.removeItem('JAM_DISPLAY_CONTENT')  \r\n            window.location.href='/'    \r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"doctor-page\">\r\n            {\r\n                isLoading ? is_email_Verified ? <NavSection adminLogo={logo} hospitalid={hospitalID} userid={userID}/> : <VerifyEmail mailVerify={is_email_Verified} email={email} /> : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nlet VerifyEmail=(props)=>{\r\n\r\n    const [ btnStatus, setBtnStatus ] = useState(\"Send Link\")\r\n    const [ headStatus, setHeadStatus ] = useState(\"Verify Your Email\")\r\n    const [ paraContent, setParaContent ] = useState(`We're excited to have you get started. First, you need to confirm whether the Provided \r\n                                                    Email account is belongs to you or not . To do so, Just click the button below to get \r\n                                                    the Verification Link.`)\r\n\r\n    let sendVerifyMail=async (event)=>{\r\n        event.preventDefault()\r\n\r\n        let email=props.email\r\n        let email_Verified=props.mailVerify\r\n\r\n        let response=await fetch(\"/api/doctor/mail-verify/\",{\r\n            method:\"POST\",\r\n            headers:{'Content-Type':'application/json'},\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                email,email_Verified\r\n            })\r\n        })\r\n        let content=await response.json()\r\n        if(content){\r\n            setBtnStatus(\"Resend Mail\")\r\n            setHeadStatus(\"Email Sent Successfully\")\r\n            setParaContent(\"Check You Inbox to find the Verification Link\")\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className=\"email-verify-message-popup\" style={{height:\"90vh\",overflow:\"hidden\",paddingTop:\"8%\"}}>\r\n            <Container>\r\n                { props.is_email_Verified ? '' :\r\n                    <Form onSubmit={sendVerifyMail} method=\"POST\">\r\n                        <Card className=\"form-email-sent-card animate__animated animate__zoomInDown\" style={{boxShadow:\"0 6px 14px rgba(0,0,0,0.2)\"}}>        \r\n                            <Row>\r\n                                <Col xs={6}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Email Verification\"\r\n                                        height=\"100%\"\r\n                                        image={emailImg}\r\n                                        title=\"Email Verification\"\r\n                                        />\r\n                                    </CardActionArea> \r\n                                </Col>\r\n                                <Col xs={6} style={{paddingTop:\"100px\"}}>\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" className=\"text-center\" style={{fontFamily:\"'Kaushan Script', cursive\"}} component=\"h2\">\r\n                                            {headStatus}\r\n                                        </Typography>\r\n                                        <div style={{width:\"60%\",textAlign:\"center\",margin:\"auto\"}}>    \r\n                                            <Typography variant=\"body2\" className=\"para-email-admin\" style={{textAlign:\"center\",fontFamily:\"'Courgette',cursive\",fontSize:\"18px\",}} color=\"textSecondary\" component=\"p\">\r\n                                                {paraContent}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                    <CardActions className=\"d-flex justify-content-center\">\r\n                                        <Button type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                        ><i className=\"fa fa-send\"></i> &nbsp; {btnStatus}</Button>\r\n                                    </CardActions>    \r\n                                </Col>\r\n                            </Row>    \r\n                        </Card>\r\n                    </Form>\r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorHomePage;","import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './../../styles/app.css'\r\nimport img2 from './../../images/img3.svg'\r\nimport img3 from './../../images/dot.svg'\r\nimport img4 from './../../images/dot-full.svg'\r\nimport img5 from './../../images/dot-full.svg'\r\nimport img11 from './../../images/logo.svg'\r\n\r\nlet DefaultHomePage=()=>{\r\n\r\n    const [author, setAuthor]=useState(\"\")\r\n    const [quote, setQuote]=useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                let response=await fetch(\"https://type.fit/api/quotes\")\r\n                let content=await response.json()\r\n                let randomValue=Math.floor(Math.random() * content.length) + 1\r\n                setAuthor(content[randomValue].author)\r\n                setQuote(content[randomValue].text) \r\n            }\r\n        )()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setInterval(()=>{\r\n            console.log()\r\n        },5000);\r\n    })\r\n\r\n    let changeImg=(e)=>{\r\n\r\n        let landingImg=document.querySelector('.landing-img')\r\n        let imgBtn1=document.querySelector('.change-btn1')\r\n        let imgBtn2=document.querySelector('.change-btn2')\r\n        let imgBtn3=document.querySelector('.change-btn3')\r\n\r\n        console.log(landingImg.src)\r\n        if(e===\"one\"){\r\n            landingImg.src=require('./../../images/img3.svg').default\r\n            imgBtn1.src=require('./../../images/dot-full.svg').default\r\n            imgBtn2.src=require('./../../images/dot.svg').default\r\n            imgBtn3.src=require('./../../images/dot.svg').default\r\n        }\r\n        else if(e===\"two\"){\r\n            landingImg.src=require('./../../images/img1.svg').default\r\n            imgBtn1.src=require('./../../images/dot.svg').default\r\n            imgBtn2.src=require('./../../images/dot-full.svg').default\r\n            imgBtn3.src=require('./../../images/dot.svg').default\r\n        }\r\n        else if(e===\"three\"){\r\n            landingImg.src=require('./../../images/img2.svg').default\r\n            imgBtn1.src=require('./../../images/dot.svg').default\r\n            imgBtn2.src=require('./../../images/dot.svg').default\r\n            imgBtn3.src=require('./../../images/dot-full.svg').default\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"default-home-page\">\r\n            <div className=\"section-one\">\r\n                <header>\r\n                    <div className=\"logo-container\">   \r\n                        <div className=\"logo-name\"><br />\r\n                            <svg id=\"logo-stroke\" width=\"115\" height=\"48\" viewBox=\"0 0 139 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M35.136 8.12001V6.12001H33.136H16.24H14.24V8.12001V10.36V12.3196L16.1992 12.3596L17.376 12.3836V56.5892L12.4221 51.5219L10.7067 49.7672L9.33414 51.8013L4.02214 59.6733L2.97957 61.2183L4.44738 62.367C5.70146 63.3485 7.49763 64.1608 9.66719 64.8692C11.9197 65.6047 14.0934 65.992 16.176 65.992C17.6705 65.992 19.0675 65.7809 20.3638 65.3675L21.376 66.4028V64.9951C24.1173 63.847 26.3644 61.7252 28.0825 58.7227C30.7951 54.0986 32 46.8165 32 37.24V12.3836L33.1768 12.3596L35.136 12.3196V10.36V8.12001ZM59.5782 46.7491L59.0247 46.7604L57.0655 46.8004V48.76V51V53H59.0655H75.9405H77.9405H78.3295H80.3295H91.9565H93.9565V51V48.76V46.7967L91.9935 46.7604L90.5741 46.7341L91.4121 23.9744L101.155 44.6834L101.695 45.832H102.964H104.948H106.252L106.778 44.64L116.013 23.7302L118.121 46.7362L116.815 46.7604L114.852 46.7967V48.76V51V53H116.852H134.581H136.581V51V48.76V46.8106L134.632 46.7607L133.835 46.7402L129.124 12.3812L130.266 12.3596L132.228 12.3226V10.36V8.12001V6.12001H130.228H116.98H115.657L115.14 7.33761L107.951 24.2493L99.5748 7.23657L99.0251 6.12001H97.7805H83.0605H81.0605V8.12001V10.36V12.324L83.0241 12.3597L84.2406 12.3818L78.725 46.7392L78.1076 46.7551L76.6124 46.7245L62.3566 6.87041L61.81 5.34207L60.2018 5.56254L52.2658 6.65054L51.0633 6.8154L50.6544 7.95819L36.7827 46.7245L35.0247 46.7604L33.0655 46.8004V48.76V51V53H35.0655H49.5295H51.5295V51V48.76V46.7988L49.5687 46.7604L48.6985 46.7433L50.0151 40.2H57.7413L59.5782 46.7491ZM55.9137 33.832H51.3322L53.2436 24.3353L55.9137 33.832Z\" stroke=\"#FF0000\" stroke-width=\"4\"/>\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"rate-anime\">\r\n                            <div className=\"heart-rate\">\r\n                                <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"120px\" height=\"73px\" viewBox=\"0 0 150 73\" enable-background=\"new 0 0 150 73\">\r\n                                    <polyline fill=\"none\" stroke=\"#ff0000\" stroke-width=\"3\" stroke-miterlimit=\"10\" points=\"0,45.486 38.514,45.486 44.595,33.324 50.676,45.486 57.771,45.486 62.838,55.622 71.959,9 80.067,63.729 84.122,45.486 97.297,45.486 103.379,40.419 110.473,45.486 150,45.486\"/>\r\n                                </svg>\r\n                                <div className=\"fade-in\"></div>\r\n                                <div className=\"fade-out\"></div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <img src={img11} alt=\"logo\" /> */}\r\n                    </div>\r\n                    <nav>\r\n                        <NavLink activeClassName=\"active-admin-link-default\" to=\"/\">                        \r\n                            <span className=\"nav-link\">Home</span>\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"active-admin-link-default\" to=\"\">\r\n                            <span className=\"nav-link\">About</span>\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"active-admin-link-default\" to=\"\">                        \r\n                            <span className=\"nav-link\">Contact</span>\r\n                        </NavLink>\r\n                    </nav>\r\n                </header>\r\n                <main>\r\n                    <section className=\"presentation\">\r\n                        <div className=\"introduction\"><br/>\r\n                            <div className=\"intro-text\">\r\n                                <h2>Let's Get start</h2>\r\n                                <div class=\"quote\">\r\n                                    <p class=\"quotes\">{quote}</p>\r\n                                    <p class=\"auth\">-{author}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cta\">\r\n                                {/* <button className=\"cta-select\">14 Inch</button> */}\r\n                                <button onClick={()=>window.location.href='/login'} className=\"pushable\">\r\n                                    <span className=\"shadow\"></span>\r\n                                    <span className=\"edge\"></span>\r\n                                    <span className=\"front\">\r\n                                        Get Started <i className=\"fas fa-angle-right start-icon\"></i>\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"cover\">\r\n                            <img src={img2} className=\"landing-img\" alt=\"matebook\" />\r\n                        </div>\r\n                    </section>\r\n                    <div className=\"laptop-select\">\r\n                        <img src={img5} className=\"change-btn1\" onClick={()=>changeImg('one')} alt=\"one\" />\r\n                        <img src={img3} className=\"change-btn2\" onClick={()=>changeImg('two')} alt=\"two\" />\r\n                        <img src={img3} className=\"change-btn3\" onClick={()=>changeImg('three')} alt=\"three\" />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n            <div className=\"section-two\">\r\n\r\n            </div>\r\n            <div className=\"section-three\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DefaultHomePage;\r\n","export default __webpack_public_path__ + \"static/media/logo.ff1f6b39.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport HospitalAdminHomePage from './Home/HospitalAdminHomePage';\r\nimport PatientHomePage from './Home/PatientHomePage';\r\nimport DoctorHomePage from './Home/DoctorHomePage';\r\nimport DefaultHomePage from './Home/DefualtHomePage';\r\n\r\nexport default function HomePage(props){\r\n\r\n    let homePageStatus=props.display;\r\n\r\n    if(homePageStatus === \"Hospital\")\r\n        return <Redirect to='/admin/dashboard' />\r\n    else if(homePageStatus === \"Patient\")\r\n        return <PatientHomePage />;\r\n    else if(homePageStatus === \"Doctor\")\r\n        return <DoctorHomePage />;\r\n    else \r\n        return <DefaultHomePage />;\r\n}\r\n","import React, { useContext } from 'react'\r\nimport HomePage from './components/HomePage'\r\nimport { ActiveSite } from './index'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nlet App= () => {\r\n\r\n    const site=useContext(ActiveSite)\r\n\r\n    return (\r\n        // <Container fluid>\r\n            <div className=\"App\">\r\n                <HomePage display={site} />\r\n            </div>\r\n        // </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n","import React,{ useEffect, useState, useRef, createRef, useContext } from 'react'\r\nimport { BrowserRouter, Route ,Switch ,Link, useHistory, Redirect } from 'react-router-dom'\r\nimport { Container, Button, Form, InputGroup } from 'react-bootstrap'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport HttpsIcon from '@material-ui/icons/Https'\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport NoEncryptionIcon from '@material-ui/icons/NoEncryption';\r\n\r\nlet HospitalLoginForm=()=>{\r\n    const [ email, setEmail ]=useState('')\r\n    const [ password, setPassword ]=useState('')\r\n    const [ isSuccess, setIsSuccess ]=useState(false)\r\n    const [ isVisible, setIsVisible ]=useState(false)\r\n    const [ err, setErr ]=useState(\"\")\r\n    const [ isPasswordErr, setIsPasswordErr ]=useState(false)\r\n    const [ isMailErr, setIsMailErr ]=useState(false)\r\n\r\n    useEffect(()=>{\r\n        document.querySelector('.hospital-login').classList.remove('animate__bounce')\r\n    },[email,password])\r\n\r\n    let login=async (event)=>{\r\n        event.preventDefault()\r\n\r\n        let response=await fetch(\"/api/hospital-login/\",{\r\n            method:\"POST\",\r\n            headers:{'Content-Type':'application/json'},\r\n            credentials:'include',\r\n            body:JSON.stringify({\r\n                email,password\r\n            })\r\n        })\r\n        let content=await response.json()\r\n        // console.log(content)\r\n        if(content.message === 'success'){\r\n            localStorage.setItem('JAM_DISPLAY_CONTENT',content.interface) \r\n            window.location.href=\"/admin/dashboard\"      \r\n            setIsSuccess(true)         \r\n        }\r\n        else if(content.detail){\r\n            document.querySelector('.hospital-login').classList.add('animate__bounce')\r\n            if(content.detail===\"Email is not Valid\"){\r\n                setIsPasswordErr(false)\r\n                setIsMailErr(true)\r\n                setErr(\"Email is not valid\")\r\n            }\r\n            else{\r\n                setIsMailErr(false)\r\n                setIsPasswordErr(true)\r\n                setErr(\"Password is Incorrect\")\r\n            }\r\n        }\r\n    }\r\n    if(isSuccess){\r\n        return <Redirect to='/admin/dashboard' />\r\n    }\r\n\r\n    let showPassword=()=>{\r\n        if(isVisible){\r\n            document.querySelector('.paswd').setAttribute('type','password')\r\n            setIsVisible(false)\r\n        }\r\n        else{\r\n            document.querySelector('.paswd').setAttribute('type','text')\r\n            setIsVisible(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"hospital-login animate__animated animate__faster\">\r\n            <Container>\r\n                <Form onSubmit={login}>\r\n                    <h4 className=\"card-title center-align\" style={{textAlign:\"Center\",lineHeight:\"100px\"}}>Sign in (Hospital)</h4>\r\n                    <Form.Group style={{width:\"70%\",margin:\"auto\"}}>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <label htmlFor=\"email\" style={{cursor:\"pointer\"}}>\r\n                                    <InputGroup.Text style={{height:\"45px\"}}><EmailIcon /></InputGroup.Text>\r\n                                </label>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control isInvalid={isMailErr} style={{height:\"45px\"}} aria-label=\"email\" aria-describedby=\"basic-addon1\" name=\"email\" onChange={e=>setEmail(e.target.value)} onInput={e=>setEmail(e.target.value)} type=\"email\" className=\"mail\" id=\"email\" placeholder=\"Enter email\" required/> {/*isInvalid*/} \r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {err}\r\n                            </Form.Control.Feedback> \r\n                        </InputGroup>\r\n                    </Form.Group><br /><br />\r\n                    <Form.Group style={{width:\"70%\",margin:\"auto\"}}>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <label htmlFor=\"paswd\" onClick={showPassword} style={{cursor:\"pointer\"}}>\r\n                                    <InputGroup.Text style={{height:\"45px\"}}>{!isVisible ? <HttpsIcon /> : <NoEncryptionIcon />}</InputGroup.Text>\r\n                                </label>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control isInvalid={isPasswordErr} style={{height:\"45px\"}} className=\"paswd\" id=\"paswd\" type=\"password\" placeholder=\"Enter Password\" name=\"password\" onChange={e=>setPassword(e.target.value)} onInput={e=>setPassword(e.target.value)} required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {err}\r\n                            </Form.Control.Feedback> \r\n                            {/* <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text> */}\r\n                        </InputGroup>\r\n                    </Form.Group><br />\r\n                    <div className=\"text-center\" style={{lineHeight:\"40px\"}}>\r\n                        <LoadingButton /><br />\r\n                        {/* <Link to='/'>Forgot password?</Link><br /> */}\r\n                        <Link to='/Hospital-Registration' className=\"text-primary\">Create New Account</Link>\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true)\r\n        e.target.click()\r\n    }\r\n\r\n    return (\r\n        <Button type=\"submit\"\r\n        variant=\"primary\" \r\n        className=\"btn rounded-3 white-text btn-lg\"\r\n        disabled={isLoading} \r\n        // style={{opacity:\"0.5\"}}\r\n        onClick={!isLoading ? handleClick : null}\r\n        >\r\n        {isLoading ? 'Logging In…' : 'Login'}\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\nexport {HospitalLoginForm}\r\n","import React,{ useEffect, useState, useRef, createRef, useContext } from 'react'\r\nimport { BrowserRouter, Route ,Switch ,Link, useHistory, Redirect } from 'react-router-dom'\r\nimport { Container, Button, Form, InputGroup } from 'react-bootstrap'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport HttpsIcon from '@material-ui/icons/Https'\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport NoEncryptionIcon from '@material-ui/icons/NoEncryption';\r\n\r\nlet DoctorLoginForm=()=>{\r\n    const [ email, setEmail ]=useState('')\r\n    const [ password, setPassword ]=useState('')\r\n    const [ isSuccess, setIsSuccess ]=useState(false)\r\n    const [ isVisible, setIsVisible ]=useState(false)\r\n    const [ err, setErr ]=useState(\"\")\r\n    const [ isPasswordErr, setIsPasswordErr ]=useState(false)\r\n    const [ isMailErr, setIsMailErr ]=useState(false)\r\n\r\n    useEffect(()=>{\r\n        document.querySelector('.hospital-login').classList.remove('animate__bounce')\r\n    },[email,password])\r\n\r\n    let login=async (event)=>{\r\n        event.preventDefault()\r\n\r\n        let formField=new FormData()\r\n        formField.append('email',email)\r\n        formField.append('password',password)\r\n\r\n        let loginResponse=await fetch(\"/api/doctor/login/\",{\r\n            method:\"POST\",\r\n            credentials:'include',\r\n            body:formField\r\n        })\r\n        let content=await loginResponse.json()\r\n        console.log(content)\r\n\r\n        if(content.message === 'success'){\r\n            localStorage.setItem('JAM_DISPLAY_CONTENT',content.interface) \r\n            window.location.href=\"/doctor\"      \r\n            setIsSuccess(true)         \r\n        }\r\n        else if(content.detail){\r\n            document.querySelector('.hospital-login').classList.add('animate__bounce')\r\n            if(content.detail===\"Email is not Valid\"){\r\n                setIsPasswordErr(false)\r\n                setIsMailErr(true)\r\n                setErr(\"Email is not valid\")\r\n            }\r\n            else{\r\n                setIsMailErr(false)\r\n                setIsPasswordErr(true)\r\n                setErr(\"Password is Incorrect\")\r\n            } \r\n        }\r\n    }\r\n\r\n    if(isSuccess){\r\n        return <Redirect to='/doctor' />\r\n    }\r\n\r\n    let showPassword=()=>{\r\n        if(isVisible){\r\n            document.querySelector('.paswd').setAttribute('type','password')\r\n            setIsVisible(false)\r\n        }\r\n        else{\r\n            document.querySelector('.paswd').setAttribute('type','text')\r\n            setIsVisible(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"hospital-login animate__animated animate__faster\">\r\n            <Container>\r\n                <Form onSubmit={login}>\r\n                    <h4 className=\"card-title center-align\" style={{textAlign:\"Center\",lineHeight:\"100px\"}}>Sign in (Doctor)</h4>\r\n                    <Form.Group style={{width:\"70%\",margin:\"auto\"}}>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <label htmlFor=\"email\" style={{cursor:\"pointer\"}}>\r\n                                    <InputGroup.Text style={{height:\"45px\"}}><EmailIcon /></InputGroup.Text>\r\n                                </label>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control isInvalid={isMailErr} style={{height:\"45px\"}} aria-label=\"email\" aria-describedby=\"basic-addon1\" name=\"email\" onChange={e=>setEmail(e.target.value)} onInput={e=>setEmail(e.target.value)} type=\"email\" className=\"mail\" id=\"email\" placeholder=\"Enter email\" required/> {/*isInvalid*/} \r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {err}\r\n                            </Form.Control.Feedback> \r\n                        </InputGroup>\r\n                    </Form.Group><br /><br />\r\n                    <Form.Group style={{width:\"70%\",margin:\"auto\"}}>\r\n                        <InputGroup hasValidation>\r\n                            <InputGroup.Prepend>\r\n                                <label htmlFor=\"paswd\" onClick={showPassword} style={{cursor:\"pointer\"}}>\r\n                                    <InputGroup.Text style={{height:\"45px\"}}>{!isVisible ? <HttpsIcon /> : <NoEncryptionIcon />}</InputGroup.Text>\r\n                                </label>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control isInvalid={isPasswordErr} style={{height:\"45px\"}} className=\"paswd\" id=\"paswd\" type=\"password\" placeholder=\"Enter Password\" name=\"password\" onChange={e=>setPassword(e.target.value)} onInput={e=>setPassword(e.target.value)} required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {err}\r\n                            </Form.Control.Feedback> \r\n                        </InputGroup>\r\n                    </Form.Group><br />\r\n                    <div className=\"text-center\" style={{lineHeight:\"40px\"}}>\r\n                        <LoadingButton /><br />\r\n                        {/* <Link to='/'>Forgot password?</Link><br /> */}\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true)\r\n        e.target.click()\r\n    }\r\n\r\n    return (\r\n        <Button type=\"submit\"\r\n        variant=\"primary\" \r\n        className=\"btn rounded-3 white-text btn-lg\"\r\n        disabled={isLoading} \r\n        // style={{opacity:\"0.5\"}}\r\n        onClick={!isLoading ? handleClick : null}\r\n        >\r\n        {isLoading ? 'Logging In…' : 'Login'}\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\nexport { DoctorLoginForm }","import React,{ useEffect, useState, useRef, createRef, useContext } from 'react'\r\nimport { BrowserRouter, Route ,Switch ,Link, useHistory, Redirect } from 'react-router-dom'\r\nimport { Container, Button, Form, InputGroup } from 'react-bootstrap'\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\r\n\r\nlet PatientLoginForm=()=>{\r\n    const [ aadhar, setAadhar ]=useState('')\r\n    const [ isSuccess, setIsSuccess ]=useState(false)\r\n    const [ isVisible, setIsVisible ]=useState(false)\r\n    const [ isOtpSent, setIsOtpSent ]=useState(false)\r\n    const [ err, setErr ]=useState(\"\")\r\n    const [ msg, setMsg ]=useState(\"\")\r\n\r\n    /* useEffect(()=>{\r\n        document.querySelector('.hospital-login').classList.remove('animate__bounce')\r\n    },[email,password])\r\n\r\n    let login=async (event)=>{\r\n        event.preventDefault()\r\n\r\n        let formField=new FormData()\r\n        formField.append('email',email)\r\n        formField.append('password',password)\r\n\r\n        let loginResponse=await fetch(\"/api/doctor/login/\",{\r\n            method:\"POST\",\r\n            credentials:'include',\r\n            body:formField\r\n        })\r\n        let content=await loginResponse.json()\r\n        console.log(content)\r\n\r\n        if(content.message === 'success'){\r\n            localStorage.setItem('JAM_DISPLAY_CONTENT',content.interface) \r\n            window.location.href=\"/doctor\"      \r\n            setIsSuccess(true)         \r\n        }\r\n        else if(content.detail){\r\n            document.querySelector('.hospital-login').classList.add('animate__bounce')\r\n            if(content.detail===\"Email is not Valid\"){\r\n                setIsPasswordErr(false)\r\n                setIsMailErr(true)\r\n                setErr(\"Email is not valid\")\r\n            }\r\n            else{\r\n                setIsMailErr(false)\r\n                setIsPasswordErr(true)\r\n                setErr(\"Password is Incorrect\")\r\n            } \r\n        }\r\n    }\r\n\r\n    if(isSuccess){\r\n        return <Redirect to='/doctor' />\r\n    }\r\n\r\n    let showPassword=()=>{\r\n        if(isVisible){\r\n            document.querySelector('.paswd').setAttribute('type','password')\r\n            setIsVisible(false)\r\n        }\r\n        else{\r\n            document.querySelector('.paswd').setAttribute('type','text')\r\n            setIsVisible(true)\r\n        }\r\n    } */\r\n\r\n    let sendOTP=async(e)=>{\r\n\r\n        e.preventDefault()\r\n        \r\n        let formField=new FormData()\r\n        formField.append('aadhar_number',aadhar)\r\n        formField.append('id',aadhar)\r\n\r\n        let response=await fetch(\"/api/patient/patient-login-otp/\",{\r\n            method:\"POST\",\r\n            credentials:'include',\r\n            body:formField\r\n        })\r\n        let content=await response.json()\r\n        // console.log(content)\r\n        if(content.message){\r\n            setMsg(content.message)\r\n            setIsOtpSent(true)\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"patient-login animate__animated animate__faster\">\r\n            <Container>\r\n                { isOtpSent ? <EnterOTP msg={msg} aadhar={aadhar} /> :\r\n                    <Form method=\"POST\" onSubmit={sendOTP}>\r\n                        <h4 className=\"card-title center-align\" style={{textAlign:\"Center\",lineHeight:\"100px\"}}>Sign in (Patient)</h4>\r\n                        <Form.Group style={{width:\"70%\",margin:\"auto\"}}>\r\n                            <InputGroup hasValidation>\r\n                                <InputGroup.Prepend>\r\n                                    <label htmlFor=\"aadhar\" style={{cursor:\"pointer\"}}>\r\n                                        <InputGroup.Text style={{height:\"45px\"}}><FingerprintIcon /></InputGroup.Text>\r\n                                    </label>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control isInvalid={isOtpSent} style={{height:\"45px\"}} aria-describedby=\"basic-addon1\" name=\"aadhar_number\" onChange={e=>setAadhar(e.target.value)} onInput={e=>setAadhar(e.target.value)} type=\"text\" className=\"aadhar\" id=\"aadhar\" placeholder=\"Enter Registered Aadhar Number\" required/> {/*isInvalid*/} \r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {err}\r\n                                </Form.Control.Feedback> \r\n                            </InputGroup>\r\n                        </Form.Group><br /><br />\r\n                        <div className=\"text-center\" style={{lineHeight:\"40px\"}}>\r\n                            <LoadingButton /><br />\r\n                        </div>\r\n                        <p>{msg}</p>\r\n                        <br /><br />\r\n                    </Form>   \r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true)\r\n        e.target.click()\r\n    }\r\n\r\n    return (\r\n        <Button type=\"submit\"\r\n        variant=\"primary\" \r\n        className=\"btn rounded-3 white-text btn-lg\"\r\n        disabled={isLoading} \r\n        // style={{opacity:\"0.5\"}}\r\n        onClick={!isLoading ? handleClick : null}\r\n        >\r\n        {isLoading ? 'Sending…' : 'Send OTP'}\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n  return new Promise((resolve) => setTimeout(resolve, 4000));\r\n}\r\n\r\nlet EnterOTP=(props)=>{\r\n\r\n    const [otp,setOTP]=useState(\"\")\r\n    const [err,setErr]=useState(false)\r\n    const [msg,setMsg]=useState(\"\")\r\n\r\n    let clickEvent=(event)=>{\r\n        if(event.target.value.length){\r\n\r\n            if(event.target.getAttribute('datatarget')===\"sixth\"){\r\n                setOTP((e)=>e+\"\"+event.target.value)\r\n                setTimeout(()=>document.querySelector('.otp-verify-btn').click(),2000)\r\n            }\r\n            else{\r\n                setOTP((e)=>e+\"\"+event.target.value)\r\n                document.getElementById(event.target.getAttribute('datatarget')).focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    let verifyOtp=async(e)=>{\r\n        e.preventDefault()\r\n\r\n        let formField=new FormData()\r\n        formField.append('aadhar_number',props.aadhar)\r\n        formField.append('otp_code',otp)\r\n\r\n        let response=await fetch(\"/api/patient/patient-login-verify-otp/\",{\r\n            method:\"POST\",\r\n            credentials:'include',\r\n            body:formField\r\n        })\r\n        let content=await response.json()\r\n        console.log(content)\r\n        if(content.result===\"Success\"){\r\n            setMsg(content.message)\r\n            setErr(false)\r\n            localStorage.setItem('JAM_DISPLAY_CONTENT',content.interface) \r\n            window.location.href=\"/patient\"      \r\n        }\r\n        else{\r\n            setMsg(content.message)\r\n            setErr(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={verifyOtp}>\r\n            <div className=\"container-otp\">\r\n                <h1>ENTER OTP</h1>\r\n                <div className=\"userInput\">\r\n                    <input type=\"text\" id='ist' datatarget=\"sec\" maxLength=\"1\" onKeyUp={clickEvent} />\r\n                    <input type=\"text\" id=\"sec\" datatarget=\"third\" maxLength=\"1\" onKeyUp={clickEvent} />\r\n                    <input type=\"text\" id=\"third\" datatarget=\"fourth\" maxLength=\"1\" onKeyUp={clickEvent} />\r\n                    <input type=\"text\" id=\"fourth\" datatarget=\"fifth\" maxLength=\"1\" onKeyUp={clickEvent} />\r\n                    <input type=\"text\" id=\"fifth\" datatarget=\"sixth\" maxLength=\"1\" onKeyUp={clickEvent} />\r\n                </div><br />\r\n                <button className=\"otp-verify-btn\" type=\"submit\">Confirm</button>\r\n                <br/>\r\n                <p className=\"text-center text-success\">{msg!==\"\" ? msg : props.msg }</p>\r\n                <br /><br />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { PatientLoginForm }","export default __webpack_public_path__ + \"static/media/vid4.0409bbfd.mp4\";","import React,{ useEffect, useState, useRef, createRef, useContext } from 'react'\r\nimport { uniqId } from '../Unique.js'\r\nimport { Link, useHistory, Redirect } from 'react-router-dom'\r\nimport LocalHospitalRoundedIcon from '@material-ui/icons/LocalHospitalRounded'\r\nimport NotListedLocationSharpIcon from '@material-ui/icons/NotListedLocationSharp'\r\nimport HowToRegRoundedIcon from '@material-ui/icons/HowToRegRounded'\r\nimport CreateRoundedIcon from '@material-ui/icons/CreateRounded'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid'\r\nimport HttpsIcon from '@material-ui/icons/Https'\r\nimport './../../styles/form.css'\r\nimport { Container, Button, Form, InputGroup, Row, Col, Spinner, Popover, OverlayTrigger } from 'react-bootstrap'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Box from '@material-ui/core/Box';\r\nimport { HospitalLoginForm } from './HospitalLoginForm'\r\nimport { DoctorLoginForm } from './DoctorLoginForm'\r\nimport { PatientLoginForm } from './PatientLoginForm'\r\nimport vid from './../../videos/vid4.mp4'\r\n\r\nexport default function Forms(props){\r\n    \r\n    let formType=props.type;\r\n        \r\n    if(formType===\"HospitalLoginForm\")\r\n        return <HospitalLoginForm />;\r\n    else if(formType===\"DoctorLoginForm\")\r\n        return <DoctorLoginForm />;\r\n    else if(formType===\"PatientLoginForm\")\r\n        return <PatientLoginForm />;\r\n}\r\n\r\nconst btnStyle={\r\n    padding:\"20px\",\r\n    fontSize:\"15px\"\r\n};\r\n\r\nlet HospitalRegisterForm=()=>{\r\n    \r\n    const history=useHistory()\r\n    const inputFocusRef=useRef()\r\n\r\n    const [registerArr,setRegisterArr]=useState({\r\n        branch:'',email:'',hospital_id:'',hospital_name:'',\r\n        password:'',user_id:uniqId(),mobile_no:0\r\n    })\r\n    const [repassword,setRepassword]=useState('')\r\n    const [isRedirect,setIsRedirect]=useState(false)\r\n    const [state, setState] = React.useState({\r\n        checkedB: false,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n            window.location.href='/'\r\n        }\r\n    },[]);\r\n    \r\n    let collectData=(event)=>{\r\n        if(event.target.name===\"repassword\")\r\n           setRepassword(event.target.value)\r\n        else\r\n            setRegisterArr({...registerArr,[event.target.name]:event.target.value})\r\n        if(event.target.name === \"repassword\" || event.target.name === \"password\")\r\n            if(repassword !== registerArr.password)\r\n                console.log(\"Passwords are not same\")\r\n            else\r\n                console.log(\"Passwords are same\")\r\n    }\r\n\r\n    let isAgree=(event)=>{\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    let registerHospital=async (event)=>{\r\n        event.preventDefault()\r\n    \r\n        setRegisterArr({\r\n            branch:registerArr.branch,email:registerArr.email,\r\n            hospital_id:registerArr.hospital_id,hospital_name:registerArr.hospital_name,\r\n            password:registerArr.password,user_id:uniqId(),mobile_no:registerArr.mobile_no\r\n        })\r\n\r\n        let response=await fetch(\"/api/hospital-register/\",{\r\n            method:\"POST\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify(registerArr)\r\n        })\r\n        let content=await response.json()\r\n        // console.log(content)\r\n        if(content.user_id){\r\n            setIsRedirect(true)\r\n        }\r\n    }\r\n\r\n    if(isRedirect){\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    let goBack=()=>{\r\n        history.push('/login')\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return(\r\n        <div className=\"register-container\">\r\n            <video autoplay=\"true\" loop muted id=\"myVideo\">\r\n                <source src={vid} type=\"video/mp4\" />\r\n            </video>\r\n            <div className=\"hospital-register\">\r\n                <h4 style={{textAlign:\"Center\",lineHeight:\"60px\"}} className=\"hospital-register-header\">Hospital Registration</h4>  \r\n                <Container>\r\n                    <Form style={{padding:\"20px\"}} onSubmit={registerHospital}>\r\n                        <Form.Group>\r\n                            <InputGroup hasValidation>\r\n                                <InputGroup.Prepend>\r\n                                    <label htmlFor=\"HospitalName\" style={{cursor:\"pointer\"}}>\r\n                                        <InputGroup.Text style={{height:\"45px\"}}><LocalHospitalRoundedIcon /></InputGroup.Text>\r\n                                    </label>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Hospital name\" name=\"hospital_name\" onChange={collectData} onKeyUp={collectData} ref={inputFocusRef} value={registerArr.hospitalName} id=\"HospitalName\" type=\"text\" className=\"Hospital-Name\" required /> {/*isInvalid*/} \r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please Enter a valid email.\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group><br /><br />\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Prepend>\r\n                                            <label htmlFor=\"HospitalRegister\" style={{cursor:\"pointer\"}}>\r\n                                                <InputGroup.Text style={{height:\"45px\"}}><HowToRegRoundedIcon /></InputGroup.Text>\r\n                                            </label>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Registeration number\" name=\"hospital_id\" onChange={collectData} onKeyUp={collectData} value={registerArr.hospitalId} id=\"HospitalRegister\" type=\"text\" className=\"Hospital-Register\" required /> {/*isInvalid*/} \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please Enter a valid email.\r\n                                        </Form.Control.Feedback> \r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Prepend>\r\n                                            <label htmlFor=\"HospitalBranch\" style={{cursor:\"pointer\"}}>\r\n                                                <InputGroup.Text style={{height:\"45px\"}}><NotListedLocationSharpIcon /></InputGroup.Text>\r\n                                            </label>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Branch\" name=\"branch\" onChange={collectData} onKeyUp={collectData} value={registerArr.branch} id=\"HospitalBranch\" type=\"text\" className=\"Hospital-Branch\" required /> {/*isInvalid*/} \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please Enter a valid email.\r\n                                        </Form.Control.Feedback> \r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row><br />\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Prepend>\r\n                                            <label htmlFor=\"email\" style={{cursor:\"pointer\"}}>\r\n                                                <InputGroup.Text style={{height:\"45px\"}}><EmailIcon /></InputGroup.Text>\r\n                                            </label>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Email\" name=\"email\" onChange={collectData} onKeyUp={collectData} value={registerArr.email} id=\"email\" type=\"email\" className=\"mail\" required /> {/*isInvalid*/} \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please Enter a valid email.\r\n                                        </Form.Control.Feedback>\r\n                                    </InputGroup>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        We'll never share your email with anyone else.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Prepend>\r\n                                            <label htmlFor=\"phonenumber\" style={{cursor:\"pointer\"}}>\r\n                                                <InputGroup.Text style={{height:\"45px\"}}><PhoneAndroidIcon /></InputGroup.Text>\r\n                                            </label>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Mobile number\" name=\"mobile_no\" onChange={collectData} onKeyUp={collectData} value={registerArr.mobile_no===0 ? \"\" : registerArr.mobile_no} type=\"tel\" id=\"phonenumber\" data-error=\"wrong\" data-success=\"right\" className=\"mobile-number form-control\" required /> {/*isInvalid*/} \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please Enter a valid email.\r\n                                        </Form.Control.Feedback> \r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row><br />\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Prepend>\r\n                                            <label htmlFor=\"password1\" style={{cursor:\"pointer\"}}>\r\n                                                <InputGroup.Text style={{height:\"45px\"}}><HttpsIcon /></InputGroup.Text>\r\n                                            </label>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control style={{height:\"45px\"}} placeholder=\"Enter Password\" name=\"password\" onChange={collectData} onKeyUp={collectData} value={registerArr.password} id=\"password1\" type=\"password\" className=\"main-password validate\" required /> {/*isInvalid*/} \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please Enter a valid email.\r\n                                        </Form.Control.Feedback> \r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <InputGroup hasValidation>\r\n                                        <InputGroup.Prepend>\r\n                                            <label htmlFor=\"password2\" style={{cursor:\"pointer\"}}>\r\n                                                <InputGroup.Text style={{height:\"45px\"}}><CreateRoundedIcon /></InputGroup.Text>\r\n                                            </label>\r\n                                        </InputGroup.Prepend>\r\n                                        <Form.Control style={{height:\"45px\"}} placeholder=\"Retype the  Password\" name=\"repassword\" onChange={collectData} onKeyUp={collectData} value={repassword} id=\"password2\" type=\"password\" className=\"re-password validate\" required /> {/*isInvalid*/} \r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please Enter a valid email.\r\n                                        </Form.Control.Feedback> \r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br /><br />\r\n                       {/*  <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\r\n                            <Box p={1}>\r\n                                <FormGroup>\r\n                                        <FormControlLabel className=\"switch-agree\" style={{color:\"rgb(59, 37, 255)\"}} onChange={isAgree} onClick={isAgree} control={<IOSSwitch checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />} label=\"Agree to terms and conditions\" required />\r\n                                </FormGroup>\r\n                            </Box>\r\n                        </Box> */}\r\n                        <Row>\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <OverlayTrigger trigger={[\"hover\", \"hover\"]} key=\"top\" placement=\"top\" overlay={\r\n                                        <Popover id={`popover-positioned-top`}>\r\n                                        <Popover.Title as=\"h3\">Back</Popover.Title>\r\n                                        <Popover.Content>\r\n                                            <strong>Click </strong>  to go back to Login Form.\r\n                                        </Popover.Content>\r\n                                        </Popover>\r\n                                    }\r\n                                >\r\n                                    <Button className=\"btn btn-danger btn-lg\" onClick={goBack} type=\"button\" variant=\"contained\">Cancel</Button>\r\n                                </OverlayTrigger>\r\n                                <LoadingButton />\r\n                            </div>  \r\n                        </Row> \r\n                    </Form>\r\n                </Container> \r\n                <br/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n        transform: 'translateX(16px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n            backgroundColor: '#52d869',\r\n            opacity: 1,\r\n            border: 'none',\r\n        },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n        color: '#52d869',\r\n        border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid white`,\r\n        backgroundColor: `black`,\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n    }))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n        focusVisibleClassName={classes.focusVisible}\r\n        disableRipple\r\n        classes={{\r\n            root: classes.root,\r\n            switchBase: classes.switchBase,\r\n            thumb: classes.thumb,\r\n            track: classes.track,\r\n            checked: classes.checked,\r\n        }}\r\n        {...props}\r\n        />\r\n    );\r\n});\r\n\r\nfunction LoadingButton() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n        simulateNetworkRequest().then(() => {\r\n            setLoading(false);\r\n        });\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (e) => {\r\n        setLoading(true);\r\n        e.target.click()\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title className=\"text-center\" as=\"h3\">Are You Sure ?</Popover.Title>\r\n            <Popover.Content>\r\n                Check the Provided Details <strong>Once again</strong> before clicking this button\r\n            </Popover.Content>\r\n        </Popover>\r\n    );\r\n\r\n    return (\r\n        <OverlayTrigger trigger={[\"hover\", \"hover\"]} placement=\"top\" overlay={popover}>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isLoading} onClick={!isLoading ? handleClick : null}>\r\n                {isLoading ? <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"lg\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                /> : ''}\r\n                &nbsp; {isLoading ? ' Registering…' : 'Register'}\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nfunction simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 2000));\r\n}\r\n\r\n                            // <div className=\"form-group\">\r\n                            //     <label>Unique ID</label>\r\n                            //     <input name=\"\" className=\"form-control\" placeholder=\"Enter your unique ID or Email\" type=\"text\" />\r\n                            // </div> \r\n                            // <div className=\"form-group\">\r\n                            //     <label>OTP</label>\r\n                            //     <input className=\"form-control\" placeholder=\"Enter the otp received on your registered mobile number\" type=\"text\" />\r\n                                \r\n  \r\n\r\nexport {HospitalLoginForm,DoctorLoginForm,PatientLoginForm,HospitalRegisterForm};\r\n","export default __webpack_public_path__ + \"static/media/girl_laptop.10840701.svg\";","export default __webpack_public_path__ + \"static/media/vid1.ca6ceeda.mp4\";","import React,{useState,useEffect} from 'react'\r\nimport { AppBar,Tabs,Tab } from '@material-ui/core'\r\nimport Forms, { HospitalLoginForm,DoctorLoginForm,PatientLoginForm } from './forms/Form'\r\nimport image from './../images/girl_laptop.svg'\r\nimport './../styles/app.css'\r\nimport vid from './../videos/vid1.mp4'\r\n\r\nlet Login=()=>{\r\n    const [value,setValue]=useState(0)\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('JAM_DISPLAY_CONTENT')){\r\n            window.location.href='/'\r\n        }\r\n    },[]);\r\n    const handleChange=(e,value)=>{\r\n        setValue(value);\r\n    }\r\n    \r\n    return(\r\n        <div className=\"login-options\">\r\n            <video autoplay=\"true\" loop muted id=\"myVideo\">\r\n                <source src={vid} type=\"video/mp4\" />\r\n            </video><br /><br /><br />\r\n            <div className=\"tab-container\">\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={value} centered TabIndicatorProps={{style: { transition:\"0.4s\", background: \"white\", height: \"6px\", top: \"58x\" }}} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Hospital\" />\r\n                        <Tab label=\"Doctor\" />\r\n                        <Tab label=\"Patient\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <div className=\"z-depth-3 tab-panel-display\">\r\n                    <div className=\"tab-contents\">\r\n                        <TabPanel value={value} index={0}>\r\n                            <Forms type=\"HospitalLoginForm\" />\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={1}>\r\n                            <Forms type=\"DoctorLoginForm\" />\r\n                        </TabPanel>\r\n                        <TabPanel value={value} index={2}>\r\n                            <Forms type=\"PatientLoginForm\" />\r\n                        </TabPanel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet TabPanel=(props)=>{\r\n    const {children,value,index}=props;\r\n    return(\r\n        <div>\r\n            {\r\n                value===index && (\r\n                <div>{children}</div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function VerifyEmail() {\r\n    const [ verifyStatus, setVerifyStatus ]=useState(\"\")\r\n    // const classes = useStyles();\r\n    useEffect(()=>{\r\n        (\r\n            async()=>{\r\n                const queryParams = new URLSearchParams(window.location.search);\r\n                const token = queryParams.get('token');\r\n                const email = queryParams.get('email');\r\n                let formField =new FormData()\r\n                formField.append('email',email)\r\n                formField.append('verify_token',token)\r\n\r\n                let response=await fetch('/api/doctor/token-verify/',{\r\n                        method: 'POST',\r\n                        credentials:'include',\r\n                        body:formField\r\n                    })\r\n                let content=await response.json()\r\n                console.log(content)\r\n                if(content.message===\"success\"){\r\n                    window.location.href=\"/doctor\"\r\n                    setVerifyStatus(\"Email Verified Successfully\")\r\n                }\r\n                else{\r\n                    setVerifyStatus(\"Invalid Token\")\r\n                }\r\n            }\r\n        )()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h4>{verifyStatus}</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, createContext } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport axios from 'axios'\r\nimport { Route, BrowserRouter } from 'react-router-dom'\r\nimport \"regenerator-runtime/runtime.js\"\r\nimport App from './App'\r\nimport Login from './components/Login'\r\nimport { HospitalRegisterForm, HospitalLoginForm } from'./components/forms/Form'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles/app.css'\r\nimport './styles/style.css'\r\nimport './styles/app.scss'\r\nimport './styles/doctor.scss'\r\nimport { enableSite } from './components/Storage.js'\r\nimport HospitalAdminHomePage from './components/Home/HospitalAdminHomePage'\r\nimport DoctorHomePage from './components/Home/DoctorHomePage'\r\nimport PatientHomePage from './components/Home/PatientHomePage'\r\nimport verifyDoctorEmail from './components/Home/sections/doctor/VerifyEmail'\r\n\r\nexport const ActiveSite=React.createContext();\r\n\r\nlet Router=()=>{\r\n    \r\n    const [site,setSite]=useState(enableSite());\r\n\r\n    return(\r\n        <ActiveSite.Provider value={site}>\r\n            <React.Fragment>\r\n                <BrowserRouter>\r\n                    <Route exact path=\"/\" component={App} />\r\n                    <Route path=\"/admin\" component={HospitalAdminHomePage} />\r\n                    <Route path=\"/doctor\" component={DoctorHomePage} />\r\n                    <Route path=\"/patient\" component={PatientHomePage} />\r\n                    <Route path=\"/login\" component={Login} /> \r\n                    <Route path=\"/Hospital-Registration\" component={HospitalRegisterForm} />\r\n                    <Route path=\"/Hospital-Login\" component={HospitalLoginForm} />\r\n                    <Route path=\"/verify-token\" component={verifyDoctorEmail} />\r\n                </BrowserRouter>\r\n            </React.Fragment>  \r\n        </ActiveSite.Provider>   \r\n    )\r\n}\r\n\r\nReactDOM.render(<Router/>, document.getElementById('root'))\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// Illustration by <a href=\"https://icons8.com/illustrations/author/5eb29f8301d0360018f18b01\">Maria Shukshina</a> from <a href=\"https://icons8.com/illustrations\">Ouch!</a>","\r\nlet enableSite=()=>{\r\n\r\n    let isAvailable=localStorage.getItem('JAM_DISPLAY_CONTENT')\r\n\r\n    return  isAvailable ? isAvailable : 'Default'\r\n}\r\n\r\nexport {enableSite}"],"sourceRoot":""}